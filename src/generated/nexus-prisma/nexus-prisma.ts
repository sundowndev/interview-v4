/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      Project: ProjectObject
      Account: AccountObject
      Person: PersonObject
      ProjectRight: ProjectRightObject
      Message: MessageObject
      Submessage: SubmessageObject
      ProjectConnection: ProjectConnectionObject
      PageInfo: PageInfoObject
      ProjectEdge: ProjectEdgeObject
      AggregateProject: AggregateProjectObject
      AccountConnection: AccountConnectionObject
      AccountEdge: AccountEdgeObject
      AggregateAccount: AggregateAccountObject
      SubmessageConnection: SubmessageConnectionObject
      SubmessageEdge: SubmessageEdgeObject
      AggregateSubmessage: AggregateSubmessageObject
      MessageConnection: MessageConnectionObject
      MessageEdge: MessageEdgeObject
      AggregateMessage: AggregateMessageObject
      ProjectRightConnection: ProjectRightConnectionObject
      ProjectRightEdge: ProjectRightEdgeObject
      AggregateProjectRight: AggregateProjectRightObject
      PersonConnection: PersonConnectionObject
      PersonEdge: PersonEdgeObject
      AggregatePerson: AggregatePersonObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      ProjectSubscriptionPayload: ProjectSubscriptionPayloadObject
      ProjectPreviousValues: ProjectPreviousValuesObject
      AccountSubscriptionPayload: AccountSubscriptionPayloadObject
      AccountPreviousValues: AccountPreviousValuesObject
      SubmessageSubscriptionPayload: SubmessageSubscriptionPayloadObject
      SubmessagePreviousValues: SubmessagePreviousValuesObject
      MessageSubscriptionPayload: MessageSubscriptionPayloadObject
      MessagePreviousValues: MessagePreviousValuesObject
      ProjectRightSubscriptionPayload: ProjectRightSubscriptionPayloadObject
      ProjectRightPreviousValues: ProjectRightPreviousValuesObject
      PersonSubscriptionPayload: PersonSubscriptionPayloadObject
      PersonPreviousValues: PersonPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      Project: ProjectFieldDetails
      Account: AccountFieldDetails
      Person: PersonFieldDetails
      ProjectRight: ProjectRightFieldDetails
      Message: MessageFieldDetails
      Submessage: SubmessageFieldDetails
      ProjectConnection: ProjectConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      ProjectEdge: ProjectEdgeFieldDetails
      AggregateProject: AggregateProjectFieldDetails
      AccountConnection: AccountConnectionFieldDetails
      AccountEdge: AccountEdgeFieldDetails
      AggregateAccount: AggregateAccountFieldDetails
      SubmessageConnection: SubmessageConnectionFieldDetails
      SubmessageEdge: SubmessageEdgeFieldDetails
      AggregateSubmessage: AggregateSubmessageFieldDetails
      MessageConnection: MessageConnectionFieldDetails
      MessageEdge: MessageEdgeFieldDetails
      AggregateMessage: AggregateMessageFieldDetails
      ProjectRightConnection: ProjectRightConnectionFieldDetails
      ProjectRightEdge: ProjectRightEdgeFieldDetails
      AggregateProjectRight: AggregateProjectRightFieldDetails
      PersonConnection: PersonConnectionFieldDetails
      PersonEdge: PersonEdgeFieldDetails
      AggregatePerson: AggregatePersonFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      ProjectSubscriptionPayload: ProjectSubscriptionPayloadFieldDetails
      ProjectPreviousValues: ProjectPreviousValuesFieldDetails
      AccountSubscriptionPayload: AccountSubscriptionPayloadFieldDetails
      AccountPreviousValues: AccountPreviousValuesFieldDetails
      SubmessageSubscriptionPayload: SubmessageSubscriptionPayloadFieldDetails
      SubmessagePreviousValues: SubmessagePreviousValuesFieldDetails
      MessageSubscriptionPayload: MessageSubscriptionPayloadFieldDetails
      MessagePreviousValues: MessagePreviousValuesFieldDetails
      ProjectRightSubscriptionPayload: ProjectRightSubscriptionPayloadFieldDetails
      ProjectRightPreviousValues: ProjectRightPreviousValuesFieldDetails
      PersonSubscriptionPayload: PersonSubscriptionPayloadFieldDetails
      PersonPreviousValues: PersonPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      ProjectWhereUniqueInput: ProjectWhereUniqueInputInputObject
      AccountWhereInput: AccountWhereInputInputObject
      ProjectWhereInput: ProjectWhereInputInputObject
      MessageWhereInput: MessageWhereInputInputObject
      SubmessageWhereInput: SubmessageWhereInputInputObject
      PersonWhereInput: PersonWhereInputInputObject
      ProjectRightWhereInput: ProjectRightWhereInputInputObject
      AccountWhereUniqueInput: AccountWhereUniqueInputInputObject
      SubmessageWhereUniqueInput: SubmessageWhereUniqueInputInputObject
      MessageWhereUniqueInput: MessageWhereUniqueInputInputObject
      ProjectRightWhereUniqueInput: ProjectRightWhereUniqueInputInputObject
      PersonWhereUniqueInput: PersonWhereUniqueInputInputObject
      ProjectCreateInput: ProjectCreateInputInputObject
      AccountCreateManyWithoutProjectInput: AccountCreateManyWithoutProjectInputInputObject
      AccountCreateWithoutProjectInput: AccountCreateWithoutProjectInputInputObject
      PersonCreateOneWithoutAccountInput: PersonCreateOneWithoutAccountInputInputObject
      PersonCreateWithoutAccountInput: PersonCreateWithoutAccountInputInputObject
      ProjectCreateOneWithoutPersonsInput: ProjectCreateOneWithoutPersonsInputInputObject
      ProjectCreateWithoutPersonsInput: ProjectCreateWithoutPersonsInputInputObject
      MessageCreateManyWithoutProjectInput: MessageCreateManyWithoutProjectInputInputObject
      MessageCreateWithoutProjectInput: MessageCreateWithoutProjectInputInputObject
      SubmessageCreateManyWithoutMessageInput: SubmessageCreateManyWithoutMessageInputInputObject
      SubmessageCreateWithoutMessageInput: SubmessageCreateWithoutMessageInputInputObject
      PersonCreateOneInput: PersonCreateOneInputInputObject
      PersonCreateInput: PersonCreateInputInputObject
      ProjectRightCreateOneWithoutPersonInput: ProjectRightCreateOneWithoutPersonInputInputObject
      ProjectRightCreateWithoutPersonInput: ProjectRightCreateWithoutPersonInputInputObject
      ProjectCreateOneInput: ProjectCreateOneInputInputObject
      MessageCreateManyWithoutSubmitterInput: MessageCreateManyWithoutSubmitterInputInputObject
      MessageCreateWithoutSubmitterInput: MessageCreateWithoutSubmitterInputInputObject
      ProjectCreateOneWithoutMessagesInput: ProjectCreateOneWithoutMessagesInputInputObject
      ProjectCreateWithoutMessagesInput: ProjectCreateWithoutMessagesInputInputObject
      PersonCreateManyWithoutProjectInput: PersonCreateManyWithoutProjectInputInputObject
      PersonCreateWithoutProjectInput: PersonCreateWithoutProjectInputInputObject
      MessageCreateManyWithoutRequesterInput: MessageCreateManyWithoutRequesterInputInputObject
      MessageCreateWithoutRequesterInput: MessageCreateWithoutRequesterInputInputObject
      PersonCreateOneWithoutSubmitted_messagesInput: PersonCreateOneWithoutSubmitted_messagesInputInputObject
      PersonCreateWithoutSubmitted_messagesInput: PersonCreateWithoutSubmitted_messagesInputInputObject
      MessageCreateManyWithoutCcsInput: MessageCreateManyWithoutCcsInputInputObject
      MessageCreateWithoutCcsInput: MessageCreateWithoutCcsInputInputObject
      PersonCreateOneWithoutRequested_messagesInput: PersonCreateOneWithoutRequested_messagesInputInputObject
      PersonCreateWithoutRequested_messagesInput: PersonCreateWithoutRequested_messagesInputInputObject
      AccountCreateOneWithoutPersonInput: AccountCreateOneWithoutPersonInputInputObject
      AccountCreateWithoutPersonInput: AccountCreateWithoutPersonInputInputObject
      ProjectCreateOneWithoutAccountsInput: ProjectCreateOneWithoutAccountsInputInputObject
      ProjectCreateWithoutAccountsInput: ProjectCreateWithoutAccountsInputInputObject
      PersonCreateManyWithoutCc_messagesInput: PersonCreateManyWithoutCc_messagesInputInputObject
      PersonCreateWithoutCc_messagesInput: PersonCreateWithoutCc_messagesInputInputObject
      ProjectUpdateInput: ProjectUpdateInputInputObject
      AccountUpdateManyWithoutProjectInput: AccountUpdateManyWithoutProjectInputInputObject
      AccountUpdateWithWhereUniqueWithoutProjectInput: AccountUpdateWithWhereUniqueWithoutProjectInputInputObject
      AccountUpdateWithoutProjectDataInput: AccountUpdateWithoutProjectDataInputInputObject
      PersonUpdateOneRequiredWithoutAccountInput: PersonUpdateOneRequiredWithoutAccountInputInputObject
      PersonUpdateWithoutAccountDataInput: PersonUpdateWithoutAccountDataInputInputObject
      ProjectUpdateOneRequiredWithoutPersonsInput: ProjectUpdateOneRequiredWithoutPersonsInputInputObject
      ProjectUpdateWithoutPersonsDataInput: ProjectUpdateWithoutPersonsDataInputInputObject
      MessageUpdateManyWithoutProjectInput: MessageUpdateManyWithoutProjectInputInputObject
      MessageUpdateWithWhereUniqueWithoutProjectInput: MessageUpdateWithWhereUniqueWithoutProjectInputInputObject
      MessageUpdateWithoutProjectDataInput: MessageUpdateWithoutProjectDataInputInputObject
      SubmessageUpdateManyWithoutMessageInput: SubmessageUpdateManyWithoutMessageInputInputObject
      SubmessageUpdateWithWhereUniqueWithoutMessageInput: SubmessageUpdateWithWhereUniqueWithoutMessageInputInputObject
      SubmessageUpdateWithoutMessageDataInput: SubmessageUpdateWithoutMessageDataInputInputObject
      PersonUpdateOneRequiredInput: PersonUpdateOneRequiredInputInputObject
      PersonUpdateDataInput: PersonUpdateDataInputInputObject
      ProjectRightUpdateOneWithoutPersonInput: ProjectRightUpdateOneWithoutPersonInputInputObject
      ProjectRightUpdateWithoutPersonDataInput: ProjectRightUpdateWithoutPersonDataInputInputObject
      ProjectUpdateOneRequiredInput: ProjectUpdateOneRequiredInputInputObject
      ProjectUpdateDataInput: ProjectUpdateDataInputInputObject
      PersonUpdateManyWithoutProjectInput: PersonUpdateManyWithoutProjectInputInputObject
      PersonUpdateWithWhereUniqueWithoutProjectInput: PersonUpdateWithWhereUniqueWithoutProjectInputInputObject
      PersonUpdateWithoutProjectDataInput: PersonUpdateWithoutProjectDataInputInputObject
      MessageUpdateManyWithoutSubmitterInput: MessageUpdateManyWithoutSubmitterInputInputObject
      MessageUpdateWithWhereUniqueWithoutSubmitterInput: MessageUpdateWithWhereUniqueWithoutSubmitterInputInputObject
      MessageUpdateWithoutSubmitterDataInput: MessageUpdateWithoutSubmitterDataInputInputObject
      ProjectUpdateOneRequiredWithoutMessagesInput: ProjectUpdateOneRequiredWithoutMessagesInputInputObject
      ProjectUpdateWithoutMessagesDataInput: ProjectUpdateWithoutMessagesDataInputInputObject
      ProjectUpsertWithoutMessagesInput: ProjectUpsertWithoutMessagesInputInputObject
      PersonUpdateOneWithoutRequested_messagesInput: PersonUpdateOneWithoutRequested_messagesInputInputObject
      PersonUpdateWithoutRequested_messagesDataInput: PersonUpdateWithoutRequested_messagesDataInputInputObject
      MessageUpdateManyWithoutCcsInput: MessageUpdateManyWithoutCcsInputInputObject
      MessageUpdateWithWhereUniqueWithoutCcsInput: MessageUpdateWithWhereUniqueWithoutCcsInputInputObject
      MessageUpdateWithoutCcsDataInput: MessageUpdateWithoutCcsDataInputInputObject
      PersonUpdateOneRequiredWithoutSubmitted_messagesInput: PersonUpdateOneRequiredWithoutSubmitted_messagesInputInputObject
      PersonUpdateWithoutSubmitted_messagesDataInput: PersonUpdateWithoutSubmitted_messagesDataInputInputObject
      MessageUpdateManyWithoutRequesterInput: MessageUpdateManyWithoutRequesterInputInputObject
      MessageUpdateWithWhereUniqueWithoutRequesterInput: MessageUpdateWithWhereUniqueWithoutRequesterInputInputObject
      MessageUpdateWithoutRequesterDataInput: MessageUpdateWithoutRequesterDataInputInputObject
      PersonUpdateManyWithoutCc_messagesInput: PersonUpdateManyWithoutCc_messagesInputInputObject
      PersonUpdateWithWhereUniqueWithoutCc_messagesInput: PersonUpdateWithWhereUniqueWithoutCc_messagesInputInputObject
      PersonUpdateWithoutCc_messagesDataInput: PersonUpdateWithoutCc_messagesDataInputInputObject
      AccountUpdateOneWithoutPersonInput: AccountUpdateOneWithoutPersonInputInputObject
      AccountUpdateWithoutPersonDataInput: AccountUpdateWithoutPersonDataInputInputObject
      ProjectUpdateOneRequiredWithoutAccountsInput: ProjectUpdateOneRequiredWithoutAccountsInputInputObject
      ProjectUpdateWithoutAccountsDataInput: ProjectUpdateWithoutAccountsDataInputInputObject
      ProjectUpsertWithoutAccountsInput: ProjectUpsertWithoutAccountsInputInputObject
      AccountUpsertWithoutPersonInput: AccountUpsertWithoutPersonInputInputObject
      PersonUpsertWithWhereUniqueWithoutCc_messagesInput: PersonUpsertWithWhereUniqueWithoutCc_messagesInputInputObject
      PersonScalarWhereInput: PersonScalarWhereInputInputObject
      PersonUpdateManyWithWhereNestedInput: PersonUpdateManyWithWhereNestedInputInputObject
      PersonUpdateManyDataInput: PersonUpdateManyDataInputInputObject
      MessageUpsertWithWhereUniqueWithoutRequesterInput: MessageUpsertWithWhereUniqueWithoutRequesterInputInputObject
      MessageScalarWhereInput: MessageScalarWhereInputInputObject
      MessageUpdateManyWithWhereNestedInput: MessageUpdateManyWithWhereNestedInputInputObject
      MessageUpdateManyDataInput: MessageUpdateManyDataInputInputObject
      PersonUpsertWithoutSubmitted_messagesInput: PersonUpsertWithoutSubmitted_messagesInputInputObject
      MessageUpsertWithWhereUniqueWithoutCcsInput: MessageUpsertWithWhereUniqueWithoutCcsInputInputObject
      PersonUpsertWithoutRequested_messagesInput: PersonUpsertWithoutRequested_messagesInputInputObject
      MessageUpsertWithWhereUniqueWithoutSubmitterInput: MessageUpsertWithWhereUniqueWithoutSubmitterInputInputObject
      PersonUpsertWithWhereUniqueWithoutProjectInput: PersonUpsertWithWhereUniqueWithoutProjectInputInputObject
      ProjectUpsertNestedInput: ProjectUpsertNestedInputInputObject
      ProjectRightUpsertWithoutPersonInput: ProjectRightUpsertWithoutPersonInputInputObject
      PersonUpsertNestedInput: PersonUpsertNestedInputInputObject
      SubmessageUpsertWithWhereUniqueWithoutMessageInput: SubmessageUpsertWithWhereUniqueWithoutMessageInputInputObject
      SubmessageScalarWhereInput: SubmessageScalarWhereInputInputObject
      SubmessageUpdateManyWithWhereNestedInput: SubmessageUpdateManyWithWhereNestedInputInputObject
      SubmessageUpdateManyDataInput: SubmessageUpdateManyDataInputInputObject
      MessageUpsertWithWhereUniqueWithoutProjectInput: MessageUpsertWithWhereUniqueWithoutProjectInputInputObject
      ProjectUpsertWithoutPersonsInput: ProjectUpsertWithoutPersonsInputInputObject
      PersonUpsertWithoutAccountInput: PersonUpsertWithoutAccountInputInputObject
      AccountUpsertWithWhereUniqueWithoutProjectInput: AccountUpsertWithWhereUniqueWithoutProjectInputInputObject
      AccountScalarWhereInput: AccountScalarWhereInputInputObject
      AccountUpdateManyWithWhereNestedInput: AccountUpdateManyWithWhereNestedInputInputObject
      AccountUpdateManyDataInput: AccountUpdateManyDataInputInputObject
      ProjectUpdateManyMutationInput: ProjectUpdateManyMutationInputInputObject
      AccountCreateInput: AccountCreateInputInputObject
      AccountUpdateInput: AccountUpdateInputInputObject
      AccountUpdateManyMutationInput: AccountUpdateManyMutationInputInputObject
      SubmessageCreateInput: SubmessageCreateInputInputObject
      MessageCreateOneWithoutSub_messagesInput: MessageCreateOneWithoutSub_messagesInputInputObject
      MessageCreateWithoutSub_messagesInput: MessageCreateWithoutSub_messagesInputInputObject
      SubmessageUpdateInput: SubmessageUpdateInputInputObject
      MessageUpdateOneRequiredWithoutSub_messagesInput: MessageUpdateOneRequiredWithoutSub_messagesInputInputObject
      MessageUpdateWithoutSub_messagesDataInput: MessageUpdateWithoutSub_messagesDataInputInputObject
      MessageUpsertWithoutSub_messagesInput: MessageUpsertWithoutSub_messagesInputInputObject
      SubmessageUpdateManyMutationInput: SubmessageUpdateManyMutationInputInputObject
      MessageCreateInput: MessageCreateInputInputObject
      MessageUpdateInput: MessageUpdateInputInputObject
      MessageUpdateManyMutationInput: MessageUpdateManyMutationInputInputObject
      ProjectRightCreateInput: ProjectRightCreateInputInputObject
      PersonCreateOneWithoutRightInput: PersonCreateOneWithoutRightInputInputObject
      PersonCreateWithoutRightInput: PersonCreateWithoutRightInputInputObject
      ProjectRightUpdateInput: ProjectRightUpdateInputInputObject
      PersonUpdateOneWithoutRightInput: PersonUpdateOneWithoutRightInputInputObject
      PersonUpdateWithoutRightDataInput: PersonUpdateWithoutRightDataInputInputObject
      PersonUpsertWithoutRightInput: PersonUpsertWithoutRightInputInputObject
      ProjectRightUpdateManyMutationInput: ProjectRightUpdateManyMutationInputInputObject
      PersonUpdateInput: PersonUpdateInputInputObject
      PersonUpdateManyMutationInput: PersonUpdateManyMutationInputInputObject
      ProjectSubscriptionWhereInput: ProjectSubscriptionWhereInputInputObject
      AccountSubscriptionWhereInput: AccountSubscriptionWhereInputInputObject
      SubmessageSubscriptionWhereInput: SubmessageSubscriptionWhereInputInputObject
      MessageSubscriptionWhereInput: MessageSubscriptionWhereInputInputObject
      ProjectRightSubscriptionWhereInput: ProjectRightSubscriptionWhereInputInputObject
      PersonSubscriptionWhereInput: PersonSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    RIGHT: RIGHTValues,
    PERSON_TYPE: PERSON_TYPEValues,
    MESSAGE_TYPE: MESSAGE_TYPEValues,
    CHANNEL: CHANNELValues,
    AccountOrderByInput: AccountOrderByInputValues,
    MessageOrderByInput: MessageOrderByInputValues,
    SubmessageOrderByInput: SubmessageOrderByInputValues,
    PersonOrderByInput: PersonOrderByInputValues,
    ProjectOrderByInput: ProjectOrderByInputValues,
    ProjectRightOrderByInput: ProjectRightOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'project', args?: QueryProjectArgs[] | false, alias?: string  } 
  | { name: 'projects', args?: QueryProjectsArgs[] | false, alias?: string  } 
  | { name: 'projectsConnection', args?: QueryProjectsConnectionArgs[] | false, alias?: string  } 
  | { name: 'account', args?: QueryAccountArgs[] | false, alias?: string  } 
  | { name: 'accounts', args?: QueryAccountsArgs[] | false, alias?: string  } 
  | { name: 'accountsConnection', args?: QueryAccountsConnectionArgs[] | false, alias?: string  } 
  | { name: 'submessage', args?: QuerySubmessageArgs[] | false, alias?: string  } 
  | { name: 'submessages', args?: QuerySubmessagesArgs[] | false, alias?: string  } 
  | { name: 'submessagesConnection', args?: QuerySubmessagesConnectionArgs[] | false, alias?: string  } 
  | { name: 'message', args?: QueryMessageArgs[] | false, alias?: string  } 
  | { name: 'messages', args?: QueryMessagesArgs[] | false, alias?: string  } 
  | { name: 'messagesConnection', args?: QueryMessagesConnectionArgs[] | false, alias?: string  } 
  | { name: 'projectRight', args?: QueryProjectRightArgs[] | false, alias?: string  } 
  | { name: 'projectRights', args?: QueryProjectRightsArgs[] | false, alias?: string  } 
  | { name: 'projectRightsConnection', args?: QueryProjectRightsConnectionArgs[] | false, alias?: string  } 
  | { name: 'person', args?: QueryPersonArgs[] | false, alias?: string  } 
  | { name: 'persons', args?: QueryPersonsArgs[] | false, alias?: string  } 
  | { name: 'personsConnection', args?: QueryPersonsConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'project'
  | 'projects'
  | 'projectsConnection'
  | 'account'
  | 'accounts'
  | 'accountsConnection'
  | 'submessage'
  | 'submessages'
  | 'submessagesConnection'
  | 'message'
  | 'messages'
  | 'messagesConnection'
  | 'projectRight'
  | 'projectRights'
  | 'projectRightsConnection'
  | 'person'
  | 'persons'
  | 'personsConnection'


type QueryProjectArgs =
  | 'where'
type QueryProjectsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProjectsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAccountArgs =
  | 'where'
type QueryAccountsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAccountsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySubmessageArgs =
  | 'where'
type QuerySubmessagesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySubmessagesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMessageArgs =
  | 'where'
type QueryMessagesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMessagesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProjectRightArgs =
  | 'where'
type QueryProjectRightsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProjectRightsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPersonArgs =
  | 'where'
type QueryPersonsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPersonsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  project: {
    type: 'Project'
    args: Record<QueryProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ProjectWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project | null> | prisma.Project | null
  }
  projects: {
    type: 'Project'
    args: Record<QueryProjectsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProjectWhereInput | null, orderBy?: prisma.ProjectOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project[]> | prisma.Project[]
  }
  projectsConnection: {
    type: 'ProjectConnection'
    args: Record<QueryProjectsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProjectWhereInput | null, orderBy?: prisma.ProjectOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectConnection> | prisma.ProjectConnection
  }
  account: {
    type: 'Account'
    args: Record<QueryAccountArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: AccountWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Account | null> | prisma.Account | null
  }
  accounts: {
    type: 'Account'
    args: Record<QueryAccountsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AccountWhereInput | null, orderBy?: prisma.AccountOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Account[]> | prisma.Account[]
  }
  accountsConnection: {
    type: 'AccountConnection'
    args: Record<QueryAccountsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AccountWhereInput | null, orderBy?: prisma.AccountOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AccountConnection> | prisma.AccountConnection
  }
  submessage: {
    type: 'Submessage'
    args: Record<QuerySubmessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: SubmessageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Submessage | null> | prisma.Submessage | null
  }
  submessages: {
    type: 'Submessage'
    args: Record<QuerySubmessagesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SubmessageWhereInput | null, orderBy?: prisma.SubmessageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Submessage[]> | prisma.Submessage[]
  }
  submessagesConnection: {
    type: 'SubmessageConnection'
    args: Record<QuerySubmessagesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SubmessageWhereInput | null, orderBy?: prisma.SubmessageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SubmessageConnection> | prisma.SubmessageConnection
  }
  message: {
    type: 'Message'
    args: Record<QueryMessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MessageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message | null> | prisma.Message | null
  }
  messages: {
    type: 'Message'
    args: Record<QueryMessagesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MessageWhereInput | null, orderBy?: prisma.MessageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message[]> | prisma.Message[]
  }
  messagesConnection: {
    type: 'MessageConnection'
    args: Record<QueryMessagesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MessageWhereInput | null, orderBy?: prisma.MessageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MessageConnection> | prisma.MessageConnection
  }
  projectRight: {
    type: 'ProjectRight'
    args: Record<QueryProjectRightArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ProjectRightWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectRight | null> | prisma.ProjectRight | null
  }
  projectRights: {
    type: 'ProjectRight'
    args: Record<QueryProjectRightsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProjectRightWhereInput | null, orderBy?: prisma.ProjectRightOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectRight[]> | prisma.ProjectRight[]
  }
  projectRightsConnection: {
    type: 'ProjectRightConnection'
    args: Record<QueryProjectRightsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProjectRightWhereInput | null, orderBy?: prisma.ProjectRightOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectRightConnection> | prisma.ProjectRightConnection
  }
  person: {
    type: 'Person'
    args: Record<QueryPersonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PersonWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person | null> | prisma.Person | null
  }
  persons: {
    type: 'Person'
    args: Record<QueryPersonsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PersonWhereInput | null, orderBy?: prisma.PersonOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person[]> | prisma.Person[]
  }
  personsConnection: {
    type: 'PersonConnection'
    args: Record<QueryPersonsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PersonWhereInput | null, orderBy?: prisma.PersonOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PersonConnection> | prisma.PersonConnection
  }
}
  

// Types for Project

type ProjectObject =
  | ProjectFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'clientId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'accounts', args?: ProjectAccountsArgs[] | false, alias?: string  } 
  | { name: 'messages', args?: ProjectMessagesArgs[] | false, alias?: string  } 
  | { name: 'persons', args?: ProjectPersonsArgs[] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 

type ProjectFields =
  | 'id'
  | 'clientId'
  | 'createdAt'
  | 'updatedAt'
  | 'accounts'
  | 'messages'
  | 'persons'
  | 'name'


type ProjectAccountsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type ProjectMessagesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type ProjectPersonsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface ProjectFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  clientId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  accounts: {
    type: 'Account'
    args: Record<ProjectAccountsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Project">,
      args: { where?: AccountWhereInput | null, orderBy?: prisma.AccountOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Account[]> | prisma.Account[]
  }
  messages: {
    type: 'Message'
    args: Record<ProjectMessagesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Project">,
      args: { where?: MessageWhereInput | null, orderBy?: prisma.MessageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message[]> | prisma.Message[]
  }
  persons: {
    type: 'Person'
    args: Record<ProjectPersonsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Project">,
      args: { where?: PersonWhereInput | null, orderBy?: prisma.PersonOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person[]> | prisma.Person[]
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Account

type AccountObject =
  | AccountFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'clientId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'lastSeenAt', args?: [] | false, alias?: string  } 
  | { name: 'deletedAt', args?: [] | false, alias?: string  } 
  | { name: 'project', args?: [] | false, alias?: string  } 
  | { name: 'person', args?: [] | false, alias?: string  } 
  | { name: 'reset_password_token', args?: [] | false, alias?: string  } 
  | { name: 'reset_password_exp_date', args?: [] | false, alias?: string  } 
  | { name: 'username', args?: [] | false, alias?: string  } 
  | { name: 'hash', args?: [] | false, alias?: string  } 
  | { name: 'need_onboarding', args?: [] | false, alias?: string  } 
  | { name: 'email_validated', args?: [] | false, alias?: string  } 
  | { name: 'emailConfirmToken', args?: [] | false, alias?: string  } 

type AccountFields =
  | 'id'
  | 'clientId'
  | 'createdAt'
  | 'updatedAt'
  | 'lastSeenAt'
  | 'deletedAt'
  | 'project'
  | 'person'
  | 'reset_password_token'
  | 'reset_password_exp_date'
  | 'username'
  | 'hash'
  | 'need_onboarding'
  | 'email_validated'
  | 'emailConfirmToken'



  

export interface AccountFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  clientId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastSeenAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  deletedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  project: {
    type: 'Project'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Account">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
  person: {
    type: 'Person'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Account">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person> | prisma.Person
  }
  reset_password_token: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  reset_password_exp_date: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  username: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hash: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  need_onboarding: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email_validated: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  emailConfirmToken: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Person

type PersonObject =
  | PersonFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'clientId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: '_projectId', args?: [] | false, alias?: string  } 
  | { name: 'project', args?: [] | false, alias?: string  } 
  | { name: 'right', args?: [] | false, alias?: string  } 
  | { name: 'submitted_messages', args?: PersonSubmitted_messagesArgs[] | false, alias?: string  } 
  | { name: 'requested_messages', args?: PersonRequested_messagesArgs[] | false, alias?: string  } 
  | { name: 'cc_messages', args?: PersonCc_messagesArgs[] | false, alias?: string  } 
  | { name: 'account', args?: [] | false, alias?: string  } 
  | { name: 'deleted', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'details', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'zendesk_url', args?: [] | false, alias?: string  } 

type PersonFields =
  | 'id'
  | 'clientId'
  | 'createdAt'
  | 'updatedAt'
  | '_projectId'
  | 'project'
  | 'right'
  | 'submitted_messages'
  | 'requested_messages'
  | 'cc_messages'
  | 'account'
  | 'deleted'
  | 'type'
  | 'name'
  | 'email'
  | 'details'
  | 'phone'
  | 'zendesk_url'


type PersonSubmitted_messagesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type PersonRequested_messagesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type PersonCc_messagesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface PersonFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  clientId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  _projectId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  project: {
    type: 'Project'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Person">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
  right: {
    type: 'ProjectRight'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Person">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectRight | null> | prisma.ProjectRight | null
  }
  submitted_messages: {
    type: 'Message'
    args: Record<PersonSubmitted_messagesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Person">,
      args: { where?: MessageWhereInput | null, orderBy?: prisma.MessageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message[]> | prisma.Message[]
  }
  requested_messages: {
    type: 'Message'
    args: Record<PersonRequested_messagesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Person">,
      args: { where?: MessageWhereInput | null, orderBy?: prisma.MessageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message[]> | prisma.Message[]
  }
  cc_messages: {
    type: 'Message'
    args: Record<PersonCc_messagesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Person">,
      args: { where?: MessageWhereInput | null, orderBy?: prisma.MessageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message[]> | prisma.Message[]
  }
  account: {
    type: 'Account'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Person">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Account | null> | prisma.Account | null
  }
  deleted: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  type: {
    type: 'PERSON_TYPE'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Person">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PERSON_TYPE> | prisma.PERSON_TYPE
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  details: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  zendesk_url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for ProjectRight

type ProjectRightObject =
  | ProjectRightFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'project', args?: [] | false, alias?: string  } 
  | { name: 'right', args?: [] | false, alias?: string  } 
  | { name: 'person', args?: [] | false, alias?: string  } 

type ProjectRightFields =
  | 'id'
  | 'project'
  | 'right'
  | 'person'



  

export interface ProjectRightFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  project: {
    type: 'Project'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectRight">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
  right: {
    type: 'RIGHT'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectRight">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RIGHT> | prisma.RIGHT
  }
  person: {
    type: 'Person'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProjectRight">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person | null> | prisma.Person | null
  }
}
  

// Types for Message

type MessageObject =
  | MessageFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'clientId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'receivedAt', args?: [] | false, alias?: string  } 
  | { name: '_projectId', args?: [] | false, alias?: string  } 
  | { name: 'project', args?: [] | false, alias?: string  } 
  | { name: 'sub_messages', args?: MessageSub_messagesArgs[] | false, alias?: string  } 
  | { name: 'submitter', args?: [] | false, alias?: string  } 
  | { name: 'requester', args?: [] | false, alias?: string  } 
  | { name: 'ccs', args?: MessageCcsArgs[] | false, alias?: string  } 
  | { name: 'integration_url', args?: [] | false, alias?: string  } 
  | { name: 'integration_id', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'content', args?: [] | false, alias?: string  } 
  | { name: 'channel', args?: [] | false, alias?: string  } 
  | { name: 'read', args?: [] | false, alias?: string  } 
  | { name: 'updated', args?: [] | false, alias?: string  } 
  | { name: 'archived', args?: [] | false, alias?: string  } 
  | { name: 'processed', args?: [] | false, alias?: string  } 

type MessageFields =
  | 'id'
  | 'clientId'
  | 'createdAt'
  | 'updatedAt'
  | 'receivedAt'
  | '_projectId'
  | 'project'
  | 'sub_messages'
  | 'submitter'
  | 'requester'
  | 'ccs'
  | 'integration_url'
  | 'integration_id'
  | 'title'
  | 'content'
  | 'channel'
  | 'read'
  | 'updated'
  | 'archived'
  | 'processed'


type MessageSub_messagesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type MessageCcsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface MessageFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  clientId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  receivedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  _projectId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  project: {
    type: 'Project'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Message">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
  sub_messages: {
    type: 'Submessage'
    args: Record<MessageSub_messagesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Message">,
      args: { where?: SubmessageWhereInput | null, orderBy?: prisma.SubmessageOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Submessage[]> | prisma.Submessage[]
  }
  submitter: {
    type: 'Person'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Message">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person> | prisma.Person
  }
  requester: {
    type: 'Person'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Message">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person | null> | prisma.Person | null
  }
  ccs: {
    type: 'Person'
    args: Record<MessageCcsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Message">,
      args: { where?: PersonWhereInput | null, orderBy?: prisma.PersonOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person[]> | prisma.Person[]
  }
  integration_url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  integration_id: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  content: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  channel: {
    type: 'CHANNEL'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Message">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CHANNEL> | prisma.CHANNEL
  }
  read: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updated: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  archived: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  processed: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Submessage

type SubmessageObject =
  | SubmessageFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'clientId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'receivedAt', args?: [] | false, alias?: string  } 
  | { name: 'message', args?: [] | false, alias?: string  } 
  | { name: 'submitter', args?: [] | false, alias?: string  } 
  | { name: 'integration_id', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'content', args?: [] | false, alias?: string  } 

type SubmessageFields =
  | 'id'
  | 'clientId'
  | 'createdAt'
  | 'updatedAt'
  | 'receivedAt'
  | 'message'
  | 'submitter'
  | 'integration_id'
  | 'type'
  | 'content'



  

export interface SubmessageFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  clientId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  receivedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  message: {
    type: 'Message'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Submessage">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message> | prisma.Message
  }
  submitter: {
    type: 'Person'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Submessage">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person> | prisma.Person
  }
  integration_id: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  type: {
    type: 'MESSAGE_TYPE'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Submessage">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MESSAGE_TYPE> | prisma.MESSAGE_TYPE
  }
  content: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ProjectConnection

type ProjectConnectionObject =
  | ProjectConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ProjectConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ProjectConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ProjectEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectEdge[]> | prisma.ProjectEdge[]
  }
  aggregate: {
    type: 'AggregateProject'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateProject> | prisma.AggregateProject
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for ProjectEdge

type ProjectEdgeObject =
  | ProjectEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ProjectEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ProjectEdgeFieldDetails {
  node: {
    type: 'Project'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateProject

type AggregateProjectObject =
  | AggregateProjectFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateProjectFields =
  | 'count'



  

export interface AggregateProjectFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AccountConnection

type AccountConnectionObject =
  | AccountConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type AccountConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface AccountConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AccountConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'AccountEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"AccountConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AccountEdge[]> | prisma.AccountEdge[]
  }
  aggregate: {
    type: 'AggregateAccount'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AccountConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateAccount> | prisma.AggregateAccount
  }
}
  

// Types for AccountEdge

type AccountEdgeObject =
  | AccountEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type AccountEdgeFields =
  | 'node'
  | 'cursor'



  

export interface AccountEdgeFieldDetails {
  node: {
    type: 'Account'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AccountEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Account> | prisma.Account
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateAccount

type AggregateAccountObject =
  | AggregateAccountFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateAccountFields =
  | 'count'



  

export interface AggregateAccountFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SubmessageConnection

type SubmessageConnectionObject =
  | SubmessageConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SubmessageConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SubmessageConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SubmessageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SubmessageEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SubmessageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SubmessageEdge[]> | prisma.SubmessageEdge[]
  }
  aggregate: {
    type: 'AggregateSubmessage'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SubmessageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSubmessage> | prisma.AggregateSubmessage
  }
}
  

// Types for SubmessageEdge

type SubmessageEdgeObject =
  | SubmessageEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SubmessageEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SubmessageEdgeFieldDetails {
  node: {
    type: 'Submessage'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SubmessageEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Submessage> | prisma.Submessage
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSubmessage

type AggregateSubmessageObject =
  | AggregateSubmessageFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSubmessageFields =
  | 'count'



  

export interface AggregateSubmessageFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MessageConnection

type MessageConnectionObject =
  | MessageConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MessageConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MessageConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MessageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MessageEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MessageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MessageEdge[]> | prisma.MessageEdge[]
  }
  aggregate: {
    type: 'AggregateMessage'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MessageConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMessage> | prisma.AggregateMessage
  }
}
  

// Types for MessageEdge

type MessageEdgeObject =
  | MessageEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MessageEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MessageEdgeFieldDetails {
  node: {
    type: 'Message'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MessageEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message> | prisma.Message
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMessage

type AggregateMessageObject =
  | AggregateMessageFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMessageFields =
  | 'count'



  

export interface AggregateMessageFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ProjectRightConnection

type ProjectRightConnectionObject =
  | ProjectRightConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ProjectRightConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ProjectRightConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectRightConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ProjectRightEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectRightConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectRightEdge[]> | prisma.ProjectRightEdge[]
  }
  aggregate: {
    type: 'AggregateProjectRight'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectRightConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateProjectRight> | prisma.AggregateProjectRight
  }
}
  

// Types for ProjectRightEdge

type ProjectRightEdgeObject =
  | ProjectRightEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ProjectRightEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ProjectRightEdgeFieldDetails {
  node: {
    type: 'ProjectRight'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectRightEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectRight> | prisma.ProjectRight
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateProjectRight

type AggregateProjectRightObject =
  | AggregateProjectRightFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateProjectRightFields =
  | 'count'



  

export interface AggregateProjectRightFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PersonConnection

type PersonConnectionObject =
  | PersonConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PersonConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PersonConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PersonConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PersonEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PersonConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PersonEdge[]> | prisma.PersonEdge[]
  }
  aggregate: {
    type: 'AggregatePerson'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PersonConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePerson> | prisma.AggregatePerson
  }
}
  

// Types for PersonEdge

type PersonEdgeObject =
  | PersonEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PersonEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PersonEdgeFieldDetails {
  node: {
    type: 'Person'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PersonEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person> | prisma.Person
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePerson

type AggregatePersonObject =
  | AggregatePersonFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePersonFields =
  | 'count'



  

export interface AggregatePersonFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createProject', args?: MutationCreateProjectArgs[] | false, alias?: string  } 
  | { name: 'updateProject', args?: MutationUpdateProjectArgs[] | false, alias?: string  } 
  | { name: 'updateManyProjects', args?: MutationUpdateManyProjectsArgs[] | false, alias?: string  } 
  | { name: 'upsertProject', args?: MutationUpsertProjectArgs[] | false, alias?: string  } 
  | { name: 'deleteProject', args?: MutationDeleteProjectArgs[] | false, alias?: string  } 
  | { name: 'deleteManyProjects', args?: MutationDeleteManyProjectsArgs[] | false, alias?: string  } 
  | { name: 'createAccount', args?: MutationCreateAccountArgs[] | false, alias?: string  } 
  | { name: 'updateAccount', args?: MutationUpdateAccountArgs[] | false, alias?: string  } 
  | { name: 'updateManyAccounts', args?: MutationUpdateManyAccountsArgs[] | false, alias?: string  } 
  | { name: 'upsertAccount', args?: MutationUpsertAccountArgs[] | false, alias?: string  } 
  | { name: 'deleteAccount', args?: MutationDeleteAccountArgs[] | false, alias?: string  } 
  | { name: 'deleteManyAccounts', args?: MutationDeleteManyAccountsArgs[] | false, alias?: string  } 
  | { name: 'createSubmessage', args?: MutationCreateSubmessageArgs[] | false, alias?: string  } 
  | { name: 'updateSubmessage', args?: MutationUpdateSubmessageArgs[] | false, alias?: string  } 
  | { name: 'updateManySubmessages', args?: MutationUpdateManySubmessagesArgs[] | false, alias?: string  } 
  | { name: 'upsertSubmessage', args?: MutationUpsertSubmessageArgs[] | false, alias?: string  } 
  | { name: 'deleteSubmessage', args?: MutationDeleteSubmessageArgs[] | false, alias?: string  } 
  | { name: 'deleteManySubmessages', args?: MutationDeleteManySubmessagesArgs[] | false, alias?: string  } 
  | { name: 'createMessage', args?: MutationCreateMessageArgs[] | false, alias?: string  } 
  | { name: 'updateMessage', args?: MutationUpdateMessageArgs[] | false, alias?: string  } 
  | { name: 'updateManyMessages', args?: MutationUpdateManyMessagesArgs[] | false, alias?: string  } 
  | { name: 'upsertMessage', args?: MutationUpsertMessageArgs[] | false, alias?: string  } 
  | { name: 'deleteMessage', args?: MutationDeleteMessageArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMessages', args?: MutationDeleteManyMessagesArgs[] | false, alias?: string  } 
  | { name: 'createProjectRight', args?: MutationCreateProjectRightArgs[] | false, alias?: string  } 
  | { name: 'updateProjectRight', args?: MutationUpdateProjectRightArgs[] | false, alias?: string  } 
  | { name: 'updateManyProjectRights', args?: MutationUpdateManyProjectRightsArgs[] | false, alias?: string  } 
  | { name: 'upsertProjectRight', args?: MutationUpsertProjectRightArgs[] | false, alias?: string  } 
  | { name: 'deleteProjectRight', args?: MutationDeleteProjectRightArgs[] | false, alias?: string  } 
  | { name: 'deleteManyProjectRights', args?: MutationDeleteManyProjectRightsArgs[] | false, alias?: string  } 
  | { name: 'createPerson', args?: MutationCreatePersonArgs[] | false, alias?: string  } 
  | { name: 'updatePerson', args?: MutationUpdatePersonArgs[] | false, alias?: string  } 
  | { name: 'updateManyPersons', args?: MutationUpdateManyPersonsArgs[] | false, alias?: string  } 
  | { name: 'upsertPerson', args?: MutationUpsertPersonArgs[] | false, alias?: string  } 
  | { name: 'deletePerson', args?: MutationDeletePersonArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPersons', args?: MutationDeleteManyPersonsArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createProject'
  | 'updateProject'
  | 'updateManyProjects'
  | 'upsertProject'
  | 'deleteProject'
  | 'deleteManyProjects'
  | 'createAccount'
  | 'updateAccount'
  | 'updateManyAccounts'
  | 'upsertAccount'
  | 'deleteAccount'
  | 'deleteManyAccounts'
  | 'createSubmessage'
  | 'updateSubmessage'
  | 'updateManySubmessages'
  | 'upsertSubmessage'
  | 'deleteSubmessage'
  | 'deleteManySubmessages'
  | 'createMessage'
  | 'updateMessage'
  | 'updateManyMessages'
  | 'upsertMessage'
  | 'deleteMessage'
  | 'deleteManyMessages'
  | 'createProjectRight'
  | 'updateProjectRight'
  | 'updateManyProjectRights'
  | 'upsertProjectRight'
  | 'deleteProjectRight'
  | 'deleteManyProjectRights'
  | 'createPerson'
  | 'updatePerson'
  | 'updateManyPersons'
  | 'upsertPerson'
  | 'deletePerson'
  | 'deleteManyPersons'


type MutationCreateProjectArgs =
  | 'data'
type MutationUpdateProjectArgs =
  | 'data'
  | 'where'
type MutationUpdateManyProjectsArgs =
  | 'data'
  | 'where'
type MutationUpsertProjectArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteProjectArgs =
  | 'where'
type MutationDeleteManyProjectsArgs =
  | 'where'
type MutationCreateAccountArgs =
  | 'data'
type MutationUpdateAccountArgs =
  | 'data'
  | 'where'
type MutationUpdateManyAccountsArgs =
  | 'data'
  | 'where'
type MutationUpsertAccountArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteAccountArgs =
  | 'where'
type MutationDeleteManyAccountsArgs =
  | 'where'
type MutationCreateSubmessageArgs =
  | 'data'
type MutationUpdateSubmessageArgs =
  | 'data'
  | 'where'
type MutationUpdateManySubmessagesArgs =
  | 'data'
  | 'where'
type MutationUpsertSubmessageArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteSubmessageArgs =
  | 'where'
type MutationDeleteManySubmessagesArgs =
  | 'where'
type MutationCreateMessageArgs =
  | 'data'
type MutationUpdateMessageArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMessagesArgs =
  | 'data'
  | 'where'
type MutationUpsertMessageArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMessageArgs =
  | 'where'
type MutationDeleteManyMessagesArgs =
  | 'where'
type MutationCreateProjectRightArgs =
  | 'data'
type MutationUpdateProjectRightArgs =
  | 'data'
  | 'where'
type MutationUpdateManyProjectRightsArgs =
  | 'data'
  | 'where'
type MutationUpsertProjectRightArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteProjectRightArgs =
  | 'where'
type MutationDeleteManyProjectRightsArgs =
  | 'where'
type MutationCreatePersonArgs =
  | 'data'
type MutationUpdatePersonArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPersonsArgs =
  | 'data'
  | 'where'
type MutationUpsertPersonArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePersonArgs =
  | 'where'
type MutationDeleteManyPersonsArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createProject: {
    type: 'Project'
    args: Record<MutationCreateProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProjectCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
  updateProject: {
    type: 'Project'
    args: Record<MutationUpdateProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProjectUpdateInput, where: ProjectWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project | null> | prisma.Project | null
  }
  updateManyProjects: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyProjectsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProjectUpdateManyMutationInput, where?: ProjectWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertProject: {
    type: 'Project'
    args: Record<MutationUpsertProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProjectWhereUniqueInput, create: ProjectCreateInput, update: ProjectUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project> | prisma.Project
  }
  deleteProject: {
    type: 'Project'
    args: Record<MutationDeleteProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProjectWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project | null> | prisma.Project | null
  }
  deleteManyProjects: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyProjectsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ProjectWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createAccount: {
    type: 'Account'
    args: Record<MutationCreateAccountArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AccountCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Account> | prisma.Account
  }
  updateAccount: {
    type: 'Account'
    args: Record<MutationUpdateAccountArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AccountUpdateInput, where: AccountWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Account | null> | prisma.Account | null
  }
  updateManyAccounts: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyAccountsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AccountUpdateManyMutationInput, where?: AccountWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertAccount: {
    type: 'Account'
    args: Record<MutationUpsertAccountArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AccountWhereUniqueInput, create: AccountCreateInput, update: AccountUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Account> | prisma.Account
  }
  deleteAccount: {
    type: 'Account'
    args: Record<MutationDeleteAccountArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AccountWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Account | null> | prisma.Account | null
  }
  deleteManyAccounts: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyAccountsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: AccountWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSubmessage: {
    type: 'Submessage'
    args: Record<MutationCreateSubmessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SubmessageCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Submessage> | prisma.Submessage
  }
  updateSubmessage: {
    type: 'Submessage'
    args: Record<MutationUpdateSubmessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SubmessageUpdateInput, where: SubmessageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Submessage | null> | prisma.Submessage | null
  }
  updateManySubmessages: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySubmessagesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SubmessageUpdateManyMutationInput, where?: SubmessageWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertSubmessage: {
    type: 'Submessage'
    args: Record<MutationUpsertSubmessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SubmessageWhereUniqueInput, create: SubmessageCreateInput, update: SubmessageUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Submessage> | prisma.Submessage
  }
  deleteSubmessage: {
    type: 'Submessage'
    args: Record<MutationDeleteSubmessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SubmessageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Submessage | null> | prisma.Submessage | null
  }
  deleteManySubmessages: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySubmessagesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SubmessageWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMessage: {
    type: 'Message'
    args: Record<MutationCreateMessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MessageCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message> | prisma.Message
  }
  updateMessage: {
    type: 'Message'
    args: Record<MutationUpdateMessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MessageUpdateInput, where: MessageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message | null> | prisma.Message | null
  }
  updateManyMessages: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMessagesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MessageUpdateManyMutationInput, where?: MessageWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMessage: {
    type: 'Message'
    args: Record<MutationUpsertMessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MessageWhereUniqueInput, create: MessageCreateInput, update: MessageUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message> | prisma.Message
  }
  deleteMessage: {
    type: 'Message'
    args: Record<MutationDeleteMessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MessageWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message | null> | prisma.Message | null
  }
  deleteManyMessages: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMessagesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MessageWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createProjectRight: {
    type: 'ProjectRight'
    args: Record<MutationCreateProjectRightArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProjectRightCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectRight> | prisma.ProjectRight
  }
  updateProjectRight: {
    type: 'ProjectRight'
    args: Record<MutationUpdateProjectRightArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProjectRightUpdateInput, where: ProjectRightWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectRight | null> | prisma.ProjectRight | null
  }
  updateManyProjectRights: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyProjectRightsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProjectRightUpdateManyMutationInput, where?: ProjectRightWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertProjectRight: {
    type: 'ProjectRight'
    args: Record<MutationUpsertProjectRightArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProjectRightWhereUniqueInput, create: ProjectRightCreateInput, update: ProjectRightUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectRight> | prisma.ProjectRight
  }
  deleteProjectRight: {
    type: 'ProjectRight'
    args: Record<MutationDeleteProjectRightArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProjectRightWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectRight | null> | prisma.ProjectRight | null
  }
  deleteManyProjectRights: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyProjectRightsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ProjectRightWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createPerson: {
    type: 'Person'
    args: Record<MutationCreatePersonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PersonCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person> | prisma.Person
  }
  updatePerson: {
    type: 'Person'
    args: Record<MutationUpdatePersonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PersonUpdateInput, where: PersonWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person | null> | prisma.Person | null
  }
  updateManyPersons: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPersonsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PersonUpdateManyMutationInput, where?: PersonWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPerson: {
    type: 'Person'
    args: Record<MutationUpsertPersonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PersonWhereUniqueInput, create: PersonCreateInput, update: PersonUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person> | prisma.Person
  }
  deletePerson: {
    type: 'Person'
    args: Record<MutationDeletePersonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PersonWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person | null> | prisma.Person | null
  }
  deleteManyPersons: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPersonsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PersonWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'project', args?: SubscriptionProjectArgs[] | false, alias?: string  } 
  | { name: 'account', args?: SubscriptionAccountArgs[] | false, alias?: string  } 
  | { name: 'submessage', args?: SubscriptionSubmessageArgs[] | false, alias?: string  } 
  | { name: 'message', args?: SubscriptionMessageArgs[] | false, alias?: string  } 
  | { name: 'projectRight', args?: SubscriptionProjectRightArgs[] | false, alias?: string  } 
  | { name: 'person', args?: SubscriptionPersonArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'project'
  | 'account'
  | 'submessage'
  | 'message'
  | 'projectRight'
  | 'person'


type SubscriptionProjectArgs =
  | 'where'
type SubscriptionAccountArgs =
  | 'where'
type SubscriptionSubmessageArgs =
  | 'where'
type SubscriptionMessageArgs =
  | 'where'
type SubscriptionProjectRightArgs =
  | 'where'
type SubscriptionPersonArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  project: {
    type: 'ProjectSubscriptionPayload'
    args: Record<SubscriptionProjectArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ProjectSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectSubscriptionPayload | null> | prisma.ProjectSubscriptionPayload | null
  }
  account: {
    type: 'AccountSubscriptionPayload'
    args: Record<SubscriptionAccountArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: AccountSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AccountSubscriptionPayload | null> | prisma.AccountSubscriptionPayload | null
  }
  submessage: {
    type: 'SubmessageSubscriptionPayload'
    args: Record<SubscriptionSubmessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SubmessageSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SubmessageSubscriptionPayload | null> | prisma.SubmessageSubscriptionPayload | null
  }
  message: {
    type: 'MessageSubscriptionPayload'
    args: Record<SubscriptionMessageArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MessageSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MessageSubscriptionPayload | null> | prisma.MessageSubscriptionPayload | null
  }
  projectRight: {
    type: 'ProjectRightSubscriptionPayload'
    args: Record<SubscriptionProjectRightArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ProjectRightSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectRightSubscriptionPayload | null> | prisma.ProjectRightSubscriptionPayload | null
  }
  person: {
    type: 'PersonSubscriptionPayload'
    args: Record<SubscriptionPersonArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PersonSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PersonSubscriptionPayload | null> | prisma.PersonSubscriptionPayload | null
  }
}
  

// Types for ProjectSubscriptionPayload

type ProjectSubscriptionPayloadObject =
  | ProjectSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ProjectSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ProjectSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Project'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProjectSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Project | null> | prisma.Project | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ProjectPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProjectSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectPreviousValues | null> | prisma.ProjectPreviousValues | null
  }
}
  

// Types for ProjectPreviousValues

type ProjectPreviousValuesObject =
  | ProjectPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'clientId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 

type ProjectPreviousValuesFields =
  | 'id'
  | 'clientId'
  | 'createdAt'
  | 'updatedAt'
  | 'name'



  

export interface ProjectPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  clientId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AccountSubscriptionPayload

type AccountSubscriptionPayloadObject =
  | AccountSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type AccountSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface AccountSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AccountSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Account'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AccountSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Account | null> | prisma.Account | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'AccountPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AccountSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AccountPreviousValues | null> | prisma.AccountPreviousValues | null
  }
}
  

// Types for AccountPreviousValues

type AccountPreviousValuesObject =
  | AccountPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'clientId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'lastSeenAt', args?: [] | false, alias?: string  } 
  | { name: 'deletedAt', args?: [] | false, alias?: string  } 
  | { name: 'reset_password_token', args?: [] | false, alias?: string  } 
  | { name: 'reset_password_exp_date', args?: [] | false, alias?: string  } 
  | { name: 'username', args?: [] | false, alias?: string  } 
  | { name: 'hash', args?: [] | false, alias?: string  } 
  | { name: 'need_onboarding', args?: [] | false, alias?: string  } 
  | { name: 'email_validated', args?: [] | false, alias?: string  } 
  | { name: 'emailConfirmToken', args?: [] | false, alias?: string  } 

type AccountPreviousValuesFields =
  | 'id'
  | 'clientId'
  | 'createdAt'
  | 'updatedAt'
  | 'lastSeenAt'
  | 'deletedAt'
  | 'reset_password_token'
  | 'reset_password_exp_date'
  | 'username'
  | 'hash'
  | 'need_onboarding'
  | 'email_validated'
  | 'emailConfirmToken'



  

export interface AccountPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  clientId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastSeenAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  deletedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  reset_password_token: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  reset_password_exp_date: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  username: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hash: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  need_onboarding: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email_validated: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  emailConfirmToken: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for SubmessageSubscriptionPayload

type SubmessageSubscriptionPayloadObject =
  | SubmessageSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SubmessageSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SubmessageSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SubmessageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Submessage'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SubmessageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Submessage | null> | prisma.Submessage | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SubmessagePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SubmessageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SubmessagePreviousValues | null> | prisma.SubmessagePreviousValues | null
  }
}
  

// Types for SubmessagePreviousValues

type SubmessagePreviousValuesObject =
  | SubmessagePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'clientId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'receivedAt', args?: [] | false, alias?: string  } 
  | { name: 'integration_id', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'content', args?: [] | false, alias?: string  } 

type SubmessagePreviousValuesFields =
  | 'id'
  | 'clientId'
  | 'createdAt'
  | 'updatedAt'
  | 'receivedAt'
  | 'integration_id'
  | 'type'
  | 'content'



  

export interface SubmessagePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  clientId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  receivedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  integration_id: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  type: {
    type: 'MESSAGE_TYPE'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SubmessagePreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MESSAGE_TYPE> | prisma.MESSAGE_TYPE
  }
  content: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MessageSubscriptionPayload

type MessageSubscriptionPayloadObject =
  | MessageSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MessageSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MessageSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MessageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Message'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MessageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Message | null> | prisma.Message | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MessagePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MessageSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MessagePreviousValues | null> | prisma.MessagePreviousValues | null
  }
}
  

// Types for MessagePreviousValues

type MessagePreviousValuesObject =
  | MessagePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'clientId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'receivedAt', args?: [] | false, alias?: string  } 
  | { name: '_projectId', args?: [] | false, alias?: string  } 
  | { name: 'integration_url', args?: [] | false, alias?: string  } 
  | { name: 'integration_id', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'content', args?: [] | false, alias?: string  } 
  | { name: 'channel', args?: [] | false, alias?: string  } 
  | { name: 'read', args?: [] | false, alias?: string  } 
  | { name: 'updated', args?: [] | false, alias?: string  } 
  | { name: 'archived', args?: [] | false, alias?: string  } 
  | { name: 'processed', args?: [] | false, alias?: string  } 

type MessagePreviousValuesFields =
  | 'id'
  | 'clientId'
  | 'createdAt'
  | 'updatedAt'
  | 'receivedAt'
  | '_projectId'
  | 'integration_url'
  | 'integration_id'
  | 'title'
  | 'content'
  | 'channel'
  | 'read'
  | 'updated'
  | 'archived'
  | 'processed'



  

export interface MessagePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  clientId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  receivedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  _projectId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  integration_url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  integration_id: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  content: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  channel: {
    type: 'CHANNEL'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MessagePreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CHANNEL> | prisma.CHANNEL
  }
  read: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updated: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  archived: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  processed: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ProjectRightSubscriptionPayload

type ProjectRightSubscriptionPayloadObject =
  | ProjectRightSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ProjectRightSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ProjectRightSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectRightSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'ProjectRight'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProjectRightSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectRight | null> | prisma.ProjectRight | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ProjectRightPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProjectRightSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProjectRightPreviousValues | null> | prisma.ProjectRightPreviousValues | null
  }
}
  

// Types for ProjectRightPreviousValues

type ProjectRightPreviousValuesObject =
  | ProjectRightPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'right', args?: [] | false, alias?: string  } 

type ProjectRightPreviousValuesFields =
  | 'id'
  | 'right'



  

export interface ProjectRightPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  right: {
    type: 'RIGHT'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProjectRightPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RIGHT> | prisma.RIGHT
  }
}
  

// Types for PersonSubscriptionPayload

type PersonSubscriptionPayloadObject =
  | PersonSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PersonSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PersonSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PersonSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Person'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PersonSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Person | null> | prisma.Person | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PersonPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PersonSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PersonPreviousValues | null> | prisma.PersonPreviousValues | null
  }
}
  

// Types for PersonPreviousValues

type PersonPreviousValuesObject =
  | PersonPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'clientId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: '_projectId', args?: [] | false, alias?: string  } 
  | { name: 'deleted', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'details', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'zendesk_url', args?: [] | false, alias?: string  } 

type PersonPreviousValuesFields =
  | 'id'
  | 'clientId'
  | 'createdAt'
  | 'updatedAt'
  | '_projectId'
  | 'deleted'
  | 'type'
  | 'name'
  | 'email'
  | 'details'
  | 'phone'
  | 'zendesk_url'



  

export interface PersonPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  clientId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  _projectId: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  deleted: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  type: {
    type: 'PERSON_TYPE'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PersonPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PERSON_TYPE> | prisma.PERSON_TYPE
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  details: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  zendesk_url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  


export interface ProjectWhereUniqueInput {
  id?: string | null
  clientId?: string | null
  name?: string | null
}
export type ProjectWhereUniqueInputInputObject =
  | Extract<keyof ProjectWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface AccountWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  clientId?: string | null
  clientId_not?: string | null
  clientId_in?: string[]
  clientId_not_in?: string[]
  clientId_lt?: string | null
  clientId_lte?: string | null
  clientId_gt?: string | null
  clientId_gte?: string | null
  clientId_contains?: string | null
  clientId_not_contains?: string | null
  clientId_starts_with?: string | null
  clientId_not_starts_with?: string | null
  clientId_ends_with?: string | null
  clientId_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  lastSeenAt?: string | null
  lastSeenAt_not?: string | null
  lastSeenAt_in?: string[]
  lastSeenAt_not_in?: string[]
  lastSeenAt_lt?: string | null
  lastSeenAt_lte?: string | null
  lastSeenAt_gt?: string | null
  lastSeenAt_gte?: string | null
  deletedAt?: string | null
  deletedAt_not?: string | null
  deletedAt_in?: string[]
  deletedAt_not_in?: string[]
  deletedAt_lt?: string | null
  deletedAt_lte?: string | null
  deletedAt_gt?: string | null
  deletedAt_gte?: string | null
  project?: ProjectWhereInput | null
  person?: PersonWhereInput | null
  reset_password_token?: string | null
  reset_password_token_not?: string | null
  reset_password_token_in?: string[]
  reset_password_token_not_in?: string[]
  reset_password_token_lt?: string | null
  reset_password_token_lte?: string | null
  reset_password_token_gt?: string | null
  reset_password_token_gte?: string | null
  reset_password_token_contains?: string | null
  reset_password_token_not_contains?: string | null
  reset_password_token_starts_with?: string | null
  reset_password_token_not_starts_with?: string | null
  reset_password_token_ends_with?: string | null
  reset_password_token_not_ends_with?: string | null
  reset_password_exp_date?: string | null
  reset_password_exp_date_not?: string | null
  reset_password_exp_date_in?: string[]
  reset_password_exp_date_not_in?: string[]
  reset_password_exp_date_lt?: string | null
  reset_password_exp_date_lte?: string | null
  reset_password_exp_date_gt?: string | null
  reset_password_exp_date_gte?: string | null
  username?: string | null
  username_not?: string | null
  username_in?: string[]
  username_not_in?: string[]
  username_lt?: string | null
  username_lte?: string | null
  username_gt?: string | null
  username_gte?: string | null
  username_contains?: string | null
  username_not_contains?: string | null
  username_starts_with?: string | null
  username_not_starts_with?: string | null
  username_ends_with?: string | null
  username_not_ends_with?: string | null
  hash?: string | null
  hash_not?: string | null
  hash_in?: string[]
  hash_not_in?: string[]
  hash_lt?: string | null
  hash_lte?: string | null
  hash_gt?: string | null
  hash_gte?: string | null
  hash_contains?: string | null
  hash_not_contains?: string | null
  hash_starts_with?: string | null
  hash_not_starts_with?: string | null
  hash_ends_with?: string | null
  hash_not_ends_with?: string | null
  need_onboarding?: boolean | null
  need_onboarding_not?: boolean | null
  email_validated?: boolean | null
  email_validated_not?: boolean | null
  emailConfirmToken?: string | null
  emailConfirmToken_not?: string | null
  emailConfirmToken_in?: string[]
  emailConfirmToken_not_in?: string[]
  emailConfirmToken_lt?: string | null
  emailConfirmToken_lte?: string | null
  emailConfirmToken_gt?: string | null
  emailConfirmToken_gte?: string | null
  emailConfirmToken_contains?: string | null
  emailConfirmToken_not_contains?: string | null
  emailConfirmToken_starts_with?: string | null
  emailConfirmToken_not_starts_with?: string | null
  emailConfirmToken_ends_with?: string | null
  emailConfirmToken_not_ends_with?: string | null
  AND?: AccountWhereInput[]
  OR?: AccountWhereInput[]
  NOT?: AccountWhereInput[]
}
export type AccountWhereInputInputObject =
  | Extract<keyof AccountWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'clientId_not', alias?: string  } 
  | { name: 'clientId_in', alias?: string  } 
  | { name: 'clientId_not_in', alias?: string  } 
  | { name: 'clientId_lt', alias?: string  } 
  | { name: 'clientId_lte', alias?: string  } 
  | { name: 'clientId_gt', alias?: string  } 
  | { name: 'clientId_gte', alias?: string  } 
  | { name: 'clientId_contains', alias?: string  } 
  | { name: 'clientId_not_contains', alias?: string  } 
  | { name: 'clientId_starts_with', alias?: string  } 
  | { name: 'clientId_not_starts_with', alias?: string  } 
  | { name: 'clientId_ends_with', alias?: string  } 
  | { name: 'clientId_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'lastSeenAt', alias?: string  } 
  | { name: 'lastSeenAt_not', alias?: string  } 
  | { name: 'lastSeenAt_in', alias?: string  } 
  | { name: 'lastSeenAt_not_in', alias?: string  } 
  | { name: 'lastSeenAt_lt', alias?: string  } 
  | { name: 'lastSeenAt_lte', alias?: string  } 
  | { name: 'lastSeenAt_gt', alias?: string  } 
  | { name: 'lastSeenAt_gte', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'deletedAt_not', alias?: string  } 
  | { name: 'deletedAt_in', alias?: string  } 
  | { name: 'deletedAt_not_in', alias?: string  } 
  | { name: 'deletedAt_lt', alias?: string  } 
  | { name: 'deletedAt_lte', alias?: string  } 
  | { name: 'deletedAt_gt', alias?: string  } 
  | { name: 'deletedAt_gte', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'reset_password_token', alias?: string  } 
  | { name: 'reset_password_token_not', alias?: string  } 
  | { name: 'reset_password_token_in', alias?: string  } 
  | { name: 'reset_password_token_not_in', alias?: string  } 
  | { name: 'reset_password_token_lt', alias?: string  } 
  | { name: 'reset_password_token_lte', alias?: string  } 
  | { name: 'reset_password_token_gt', alias?: string  } 
  | { name: 'reset_password_token_gte', alias?: string  } 
  | { name: 'reset_password_token_contains', alias?: string  } 
  | { name: 'reset_password_token_not_contains', alias?: string  } 
  | { name: 'reset_password_token_starts_with', alias?: string  } 
  | { name: 'reset_password_token_not_starts_with', alias?: string  } 
  | { name: 'reset_password_token_ends_with', alias?: string  } 
  | { name: 'reset_password_token_not_ends_with', alias?: string  } 
  | { name: 'reset_password_exp_date', alias?: string  } 
  | { name: 'reset_password_exp_date_not', alias?: string  } 
  | { name: 'reset_password_exp_date_in', alias?: string  } 
  | { name: 'reset_password_exp_date_not_in', alias?: string  } 
  | { name: 'reset_password_exp_date_lt', alias?: string  } 
  | { name: 'reset_password_exp_date_lte', alias?: string  } 
  | { name: 'reset_password_exp_date_gt', alias?: string  } 
  | { name: 'reset_password_exp_date_gte', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'username_not', alias?: string  } 
  | { name: 'username_in', alias?: string  } 
  | { name: 'username_not_in', alias?: string  } 
  | { name: 'username_lt', alias?: string  } 
  | { name: 'username_lte', alias?: string  } 
  | { name: 'username_gt', alias?: string  } 
  | { name: 'username_gte', alias?: string  } 
  | { name: 'username_contains', alias?: string  } 
  | { name: 'username_not_contains', alias?: string  } 
  | { name: 'username_starts_with', alias?: string  } 
  | { name: 'username_not_starts_with', alias?: string  } 
  | { name: 'username_ends_with', alias?: string  } 
  | { name: 'username_not_ends_with', alias?: string  } 
  | { name: 'hash', alias?: string  } 
  | { name: 'hash_not', alias?: string  } 
  | { name: 'hash_in', alias?: string  } 
  | { name: 'hash_not_in', alias?: string  } 
  | { name: 'hash_lt', alias?: string  } 
  | { name: 'hash_lte', alias?: string  } 
  | { name: 'hash_gt', alias?: string  } 
  | { name: 'hash_gte', alias?: string  } 
  | { name: 'hash_contains', alias?: string  } 
  | { name: 'hash_not_contains', alias?: string  } 
  | { name: 'hash_starts_with', alias?: string  } 
  | { name: 'hash_not_starts_with', alias?: string  } 
  | { name: 'hash_ends_with', alias?: string  } 
  | { name: 'hash_not_ends_with', alias?: string  } 
  | { name: 'need_onboarding', alias?: string  } 
  | { name: 'need_onboarding_not', alias?: string  } 
  | { name: 'email_validated', alias?: string  } 
  | { name: 'email_validated_not', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'emailConfirmToken_not', alias?: string  } 
  | { name: 'emailConfirmToken_in', alias?: string  } 
  | { name: 'emailConfirmToken_not_in', alias?: string  } 
  | { name: 'emailConfirmToken_lt', alias?: string  } 
  | { name: 'emailConfirmToken_lte', alias?: string  } 
  | { name: 'emailConfirmToken_gt', alias?: string  } 
  | { name: 'emailConfirmToken_gte', alias?: string  } 
  | { name: 'emailConfirmToken_contains', alias?: string  } 
  | { name: 'emailConfirmToken_not_contains', alias?: string  } 
  | { name: 'emailConfirmToken_starts_with', alias?: string  } 
  | { name: 'emailConfirmToken_not_starts_with', alias?: string  } 
  | { name: 'emailConfirmToken_ends_with', alias?: string  } 
  | { name: 'emailConfirmToken_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProjectWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  clientId?: string | null
  clientId_not?: string | null
  clientId_in?: string[]
  clientId_not_in?: string[]
  clientId_lt?: string | null
  clientId_lte?: string | null
  clientId_gt?: string | null
  clientId_gte?: string | null
  clientId_contains?: string | null
  clientId_not_contains?: string | null
  clientId_starts_with?: string | null
  clientId_not_starts_with?: string | null
  clientId_ends_with?: string | null
  clientId_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  accounts_every?: AccountWhereInput | null
  accounts_some?: AccountWhereInput | null
  accounts_none?: AccountWhereInput | null
  messages_every?: MessageWhereInput | null
  messages_some?: MessageWhereInput | null
  messages_none?: MessageWhereInput | null
  persons_every?: PersonWhereInput | null
  persons_some?: PersonWhereInput | null
  persons_none?: PersonWhereInput | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  AND?: ProjectWhereInput[]
  OR?: ProjectWhereInput[]
  NOT?: ProjectWhereInput[]
}
export type ProjectWhereInputInputObject =
  | Extract<keyof ProjectWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'clientId_not', alias?: string  } 
  | { name: 'clientId_in', alias?: string  } 
  | { name: 'clientId_not_in', alias?: string  } 
  | { name: 'clientId_lt', alias?: string  } 
  | { name: 'clientId_lte', alias?: string  } 
  | { name: 'clientId_gt', alias?: string  } 
  | { name: 'clientId_gte', alias?: string  } 
  | { name: 'clientId_contains', alias?: string  } 
  | { name: 'clientId_not_contains', alias?: string  } 
  | { name: 'clientId_starts_with', alias?: string  } 
  | { name: 'clientId_not_starts_with', alias?: string  } 
  | { name: 'clientId_ends_with', alias?: string  } 
  | { name: 'clientId_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'accounts_every', alias?: string  } 
  | { name: 'accounts_some', alias?: string  } 
  | { name: 'accounts_none', alias?: string  } 
  | { name: 'messages_every', alias?: string  } 
  | { name: 'messages_some', alias?: string  } 
  | { name: 'messages_none', alias?: string  } 
  | { name: 'persons_every', alias?: string  } 
  | { name: 'persons_some', alias?: string  } 
  | { name: 'persons_none', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MessageWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  clientId?: string | null
  clientId_not?: string | null
  clientId_in?: string[]
  clientId_not_in?: string[]
  clientId_lt?: string | null
  clientId_lte?: string | null
  clientId_gt?: string | null
  clientId_gte?: string | null
  clientId_contains?: string | null
  clientId_not_contains?: string | null
  clientId_starts_with?: string | null
  clientId_not_starts_with?: string | null
  clientId_ends_with?: string | null
  clientId_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  receivedAt?: string | null
  receivedAt_not?: string | null
  receivedAt_in?: string[]
  receivedAt_not_in?: string[]
  receivedAt_lt?: string | null
  receivedAt_lte?: string | null
  receivedAt_gt?: string | null
  receivedAt_gte?: string | null
  _projectId?: string | null
  _projectId_not?: string | null
  _projectId_in?: string[]
  _projectId_not_in?: string[]
  _projectId_lt?: string | null
  _projectId_lte?: string | null
  _projectId_gt?: string | null
  _projectId_gte?: string | null
  _projectId_contains?: string | null
  _projectId_not_contains?: string | null
  _projectId_starts_with?: string | null
  _projectId_not_starts_with?: string | null
  _projectId_ends_with?: string | null
  _projectId_not_ends_with?: string | null
  project?: ProjectWhereInput | null
  sub_messages_every?: SubmessageWhereInput | null
  sub_messages_some?: SubmessageWhereInput | null
  sub_messages_none?: SubmessageWhereInput | null
  submitter?: PersonWhereInput | null
  requester?: PersonWhereInput | null
  ccs_every?: PersonWhereInput | null
  ccs_some?: PersonWhereInput | null
  ccs_none?: PersonWhereInput | null
  integration_url?: string | null
  integration_url_not?: string | null
  integration_url_in?: string[]
  integration_url_not_in?: string[]
  integration_url_lt?: string | null
  integration_url_lte?: string | null
  integration_url_gt?: string | null
  integration_url_gte?: string | null
  integration_url_contains?: string | null
  integration_url_not_contains?: string | null
  integration_url_starts_with?: string | null
  integration_url_not_starts_with?: string | null
  integration_url_ends_with?: string | null
  integration_url_not_ends_with?: string | null
  integration_id?: string | null
  integration_id_not?: string | null
  integration_id_in?: string[]
  integration_id_not_in?: string[]
  integration_id_lt?: string | null
  integration_id_lte?: string | null
  integration_id_gt?: string | null
  integration_id_gte?: string | null
  integration_id_contains?: string | null
  integration_id_not_contains?: string | null
  integration_id_starts_with?: string | null
  integration_id_not_starts_with?: string | null
  integration_id_ends_with?: string | null
  integration_id_not_ends_with?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  content?: string | null
  content_not?: string | null
  content_in?: string[]
  content_not_in?: string[]
  content_lt?: string | null
  content_lte?: string | null
  content_gt?: string | null
  content_gte?: string | null
  content_contains?: string | null
  content_not_contains?: string | null
  content_starts_with?: string | null
  content_not_starts_with?: string | null
  content_ends_with?: string | null
  content_not_ends_with?: string | null
  channel?: prisma.CHANNEL | null
  channel_not?: prisma.CHANNEL | null
  channel_in?: prisma.CHANNEL[]
  channel_not_in?: prisma.CHANNEL[]
  read?: boolean | null
  read_not?: boolean | null
  updated?: boolean | null
  updated_not?: boolean | null
  archived?: boolean | null
  archived_not?: boolean | null
  processed?: boolean | null
  processed_not?: boolean | null
  AND?: MessageWhereInput[]
  OR?: MessageWhereInput[]
  NOT?: MessageWhereInput[]
}
export type MessageWhereInputInputObject =
  | Extract<keyof MessageWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'clientId_not', alias?: string  } 
  | { name: 'clientId_in', alias?: string  } 
  | { name: 'clientId_not_in', alias?: string  } 
  | { name: 'clientId_lt', alias?: string  } 
  | { name: 'clientId_lte', alias?: string  } 
  | { name: 'clientId_gt', alias?: string  } 
  | { name: 'clientId_gte', alias?: string  } 
  | { name: 'clientId_contains', alias?: string  } 
  | { name: 'clientId_not_contains', alias?: string  } 
  | { name: 'clientId_starts_with', alias?: string  } 
  | { name: 'clientId_not_starts_with', alias?: string  } 
  | { name: 'clientId_ends_with', alias?: string  } 
  | { name: 'clientId_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: 'receivedAt_not', alias?: string  } 
  | { name: 'receivedAt_in', alias?: string  } 
  | { name: 'receivedAt_not_in', alias?: string  } 
  | { name: 'receivedAt_lt', alias?: string  } 
  | { name: 'receivedAt_lte', alias?: string  } 
  | { name: 'receivedAt_gt', alias?: string  } 
  | { name: 'receivedAt_gte', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: '_projectId_not', alias?: string  } 
  | { name: '_projectId_in', alias?: string  } 
  | { name: '_projectId_not_in', alias?: string  } 
  | { name: '_projectId_lt', alias?: string  } 
  | { name: '_projectId_lte', alias?: string  } 
  | { name: '_projectId_gt', alias?: string  } 
  | { name: '_projectId_gte', alias?: string  } 
  | { name: '_projectId_contains', alias?: string  } 
  | { name: '_projectId_not_contains', alias?: string  } 
  | { name: '_projectId_starts_with', alias?: string  } 
  | { name: '_projectId_not_starts_with', alias?: string  } 
  | { name: '_projectId_ends_with', alias?: string  } 
  | { name: '_projectId_not_ends_with', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'sub_messages_every', alias?: string  } 
  | { name: 'sub_messages_some', alias?: string  } 
  | { name: 'sub_messages_none', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'requester', alias?: string  } 
  | { name: 'ccs_every', alias?: string  } 
  | { name: 'ccs_some', alias?: string  } 
  | { name: 'ccs_none', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_url_not', alias?: string  } 
  | { name: 'integration_url_in', alias?: string  } 
  | { name: 'integration_url_not_in', alias?: string  } 
  | { name: 'integration_url_lt', alias?: string  } 
  | { name: 'integration_url_lte', alias?: string  } 
  | { name: 'integration_url_gt', alias?: string  } 
  | { name: 'integration_url_gte', alias?: string  } 
  | { name: 'integration_url_contains', alias?: string  } 
  | { name: 'integration_url_not_contains', alias?: string  } 
  | { name: 'integration_url_starts_with', alias?: string  } 
  | { name: 'integration_url_not_starts_with', alias?: string  } 
  | { name: 'integration_url_ends_with', alias?: string  } 
  | { name: 'integration_url_not_ends_with', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'integration_id_not', alias?: string  } 
  | { name: 'integration_id_in', alias?: string  } 
  | { name: 'integration_id_not_in', alias?: string  } 
  | { name: 'integration_id_lt', alias?: string  } 
  | { name: 'integration_id_lte', alias?: string  } 
  | { name: 'integration_id_gt', alias?: string  } 
  | { name: 'integration_id_gte', alias?: string  } 
  | { name: 'integration_id_contains', alias?: string  } 
  | { name: 'integration_id_not_contains', alias?: string  } 
  | { name: 'integration_id_starts_with', alias?: string  } 
  | { name: 'integration_id_not_starts_with', alias?: string  } 
  | { name: 'integration_id_ends_with', alias?: string  } 
  | { name: 'integration_id_not_ends_with', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'content_not', alias?: string  } 
  | { name: 'content_in', alias?: string  } 
  | { name: 'content_not_in', alias?: string  } 
  | { name: 'content_lt', alias?: string  } 
  | { name: 'content_lte', alias?: string  } 
  | { name: 'content_gt', alias?: string  } 
  | { name: 'content_gte', alias?: string  } 
  | { name: 'content_contains', alias?: string  } 
  | { name: 'content_not_contains', alias?: string  } 
  | { name: 'content_starts_with', alias?: string  } 
  | { name: 'content_not_starts_with', alias?: string  } 
  | { name: 'content_ends_with', alias?: string  } 
  | { name: 'content_not_ends_with', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'channel_not', alias?: string  } 
  | { name: 'channel_in', alias?: string  } 
  | { name: 'channel_not_in', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'read_not', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'updated_not', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'archived_not', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  | { name: 'processed_not', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SubmessageWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  clientId?: string | null
  clientId_not?: string | null
  clientId_in?: string[]
  clientId_not_in?: string[]
  clientId_lt?: string | null
  clientId_lte?: string | null
  clientId_gt?: string | null
  clientId_gte?: string | null
  clientId_contains?: string | null
  clientId_not_contains?: string | null
  clientId_starts_with?: string | null
  clientId_not_starts_with?: string | null
  clientId_ends_with?: string | null
  clientId_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  receivedAt?: string | null
  receivedAt_not?: string | null
  receivedAt_in?: string[]
  receivedAt_not_in?: string[]
  receivedAt_lt?: string | null
  receivedAt_lte?: string | null
  receivedAt_gt?: string | null
  receivedAt_gte?: string | null
  message?: MessageWhereInput | null
  submitter?: PersonWhereInput | null
  integration_id?: string | null
  integration_id_not?: string | null
  integration_id_in?: string[]
  integration_id_not_in?: string[]
  integration_id_lt?: string | null
  integration_id_lte?: string | null
  integration_id_gt?: string | null
  integration_id_gte?: string | null
  integration_id_contains?: string | null
  integration_id_not_contains?: string | null
  integration_id_starts_with?: string | null
  integration_id_not_starts_with?: string | null
  integration_id_ends_with?: string | null
  integration_id_not_ends_with?: string | null
  type?: prisma.MESSAGE_TYPE | null
  type_not?: prisma.MESSAGE_TYPE | null
  type_in?: prisma.MESSAGE_TYPE[]
  type_not_in?: prisma.MESSAGE_TYPE[]
  content?: string | null
  content_not?: string | null
  content_in?: string[]
  content_not_in?: string[]
  content_lt?: string | null
  content_lte?: string | null
  content_gt?: string | null
  content_gte?: string | null
  content_contains?: string | null
  content_not_contains?: string | null
  content_starts_with?: string | null
  content_not_starts_with?: string | null
  content_ends_with?: string | null
  content_not_ends_with?: string | null
  AND?: SubmessageWhereInput[]
  OR?: SubmessageWhereInput[]
  NOT?: SubmessageWhereInput[]
}
export type SubmessageWhereInputInputObject =
  | Extract<keyof SubmessageWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'clientId_not', alias?: string  } 
  | { name: 'clientId_in', alias?: string  } 
  | { name: 'clientId_not_in', alias?: string  } 
  | { name: 'clientId_lt', alias?: string  } 
  | { name: 'clientId_lte', alias?: string  } 
  | { name: 'clientId_gt', alias?: string  } 
  | { name: 'clientId_gte', alias?: string  } 
  | { name: 'clientId_contains', alias?: string  } 
  | { name: 'clientId_not_contains', alias?: string  } 
  | { name: 'clientId_starts_with', alias?: string  } 
  | { name: 'clientId_not_starts_with', alias?: string  } 
  | { name: 'clientId_ends_with', alias?: string  } 
  | { name: 'clientId_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: 'receivedAt_not', alias?: string  } 
  | { name: 'receivedAt_in', alias?: string  } 
  | { name: 'receivedAt_not_in', alias?: string  } 
  | { name: 'receivedAt_lt', alias?: string  } 
  | { name: 'receivedAt_lte', alias?: string  } 
  | { name: 'receivedAt_gt', alias?: string  } 
  | { name: 'receivedAt_gte', alias?: string  } 
  | { name: 'message', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'integration_id_not', alias?: string  } 
  | { name: 'integration_id_in', alias?: string  } 
  | { name: 'integration_id_not_in', alias?: string  } 
  | { name: 'integration_id_lt', alias?: string  } 
  | { name: 'integration_id_lte', alias?: string  } 
  | { name: 'integration_id_gt', alias?: string  } 
  | { name: 'integration_id_gte', alias?: string  } 
  | { name: 'integration_id_contains', alias?: string  } 
  | { name: 'integration_id_not_contains', alias?: string  } 
  | { name: 'integration_id_starts_with', alias?: string  } 
  | { name: 'integration_id_not_starts_with', alias?: string  } 
  | { name: 'integration_id_ends_with', alias?: string  } 
  | { name: 'integration_id_not_ends_with', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'content_not', alias?: string  } 
  | { name: 'content_in', alias?: string  } 
  | { name: 'content_not_in', alias?: string  } 
  | { name: 'content_lt', alias?: string  } 
  | { name: 'content_lte', alias?: string  } 
  | { name: 'content_gt', alias?: string  } 
  | { name: 'content_gte', alias?: string  } 
  | { name: 'content_contains', alias?: string  } 
  | { name: 'content_not_contains', alias?: string  } 
  | { name: 'content_starts_with', alias?: string  } 
  | { name: 'content_not_starts_with', alias?: string  } 
  | { name: 'content_ends_with', alias?: string  } 
  | { name: 'content_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PersonWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  clientId?: string | null
  clientId_not?: string | null
  clientId_in?: string[]
  clientId_not_in?: string[]
  clientId_lt?: string | null
  clientId_lte?: string | null
  clientId_gt?: string | null
  clientId_gte?: string | null
  clientId_contains?: string | null
  clientId_not_contains?: string | null
  clientId_starts_with?: string | null
  clientId_not_starts_with?: string | null
  clientId_ends_with?: string | null
  clientId_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  _projectId?: string | null
  _projectId_not?: string | null
  _projectId_in?: string[]
  _projectId_not_in?: string[]
  _projectId_lt?: string | null
  _projectId_lte?: string | null
  _projectId_gt?: string | null
  _projectId_gte?: string | null
  _projectId_contains?: string | null
  _projectId_not_contains?: string | null
  _projectId_starts_with?: string | null
  _projectId_not_starts_with?: string | null
  _projectId_ends_with?: string | null
  _projectId_not_ends_with?: string | null
  project?: ProjectWhereInput | null
  right?: ProjectRightWhereInput | null
  submitted_messages_every?: MessageWhereInput | null
  submitted_messages_some?: MessageWhereInput | null
  submitted_messages_none?: MessageWhereInput | null
  requested_messages_every?: MessageWhereInput | null
  requested_messages_some?: MessageWhereInput | null
  requested_messages_none?: MessageWhereInput | null
  cc_messages_every?: MessageWhereInput | null
  cc_messages_some?: MessageWhereInput | null
  cc_messages_none?: MessageWhereInput | null
  account?: AccountWhereInput | null
  deleted?: boolean | null
  deleted_not?: boolean | null
  type?: prisma.PERSON_TYPE | null
  type_not?: prisma.PERSON_TYPE | null
  type_in?: prisma.PERSON_TYPE[]
  type_not_in?: prisma.PERSON_TYPE[]
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  details?: string | null
  details_not?: string | null
  details_in?: string[]
  details_not_in?: string[]
  details_lt?: string | null
  details_lte?: string | null
  details_gt?: string | null
  details_gte?: string | null
  details_contains?: string | null
  details_not_contains?: string | null
  details_starts_with?: string | null
  details_not_starts_with?: string | null
  details_ends_with?: string | null
  details_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  zendesk_url?: string | null
  zendesk_url_not?: string | null
  zendesk_url_in?: string[]
  zendesk_url_not_in?: string[]
  zendesk_url_lt?: string | null
  zendesk_url_lte?: string | null
  zendesk_url_gt?: string | null
  zendesk_url_gte?: string | null
  zendesk_url_contains?: string | null
  zendesk_url_not_contains?: string | null
  zendesk_url_starts_with?: string | null
  zendesk_url_not_starts_with?: string | null
  zendesk_url_ends_with?: string | null
  zendesk_url_not_ends_with?: string | null
  AND?: PersonWhereInput[]
  OR?: PersonWhereInput[]
  NOT?: PersonWhereInput[]
}
export type PersonWhereInputInputObject =
  | Extract<keyof PersonWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'clientId_not', alias?: string  } 
  | { name: 'clientId_in', alias?: string  } 
  | { name: 'clientId_not_in', alias?: string  } 
  | { name: 'clientId_lt', alias?: string  } 
  | { name: 'clientId_lte', alias?: string  } 
  | { name: 'clientId_gt', alias?: string  } 
  | { name: 'clientId_gte', alias?: string  } 
  | { name: 'clientId_contains', alias?: string  } 
  | { name: 'clientId_not_contains', alias?: string  } 
  | { name: 'clientId_starts_with', alias?: string  } 
  | { name: 'clientId_not_starts_with', alias?: string  } 
  | { name: 'clientId_ends_with', alias?: string  } 
  | { name: 'clientId_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: '_projectId_not', alias?: string  } 
  | { name: '_projectId_in', alias?: string  } 
  | { name: '_projectId_not_in', alias?: string  } 
  | { name: '_projectId_lt', alias?: string  } 
  | { name: '_projectId_lte', alias?: string  } 
  | { name: '_projectId_gt', alias?: string  } 
  | { name: '_projectId_gte', alias?: string  } 
  | { name: '_projectId_contains', alias?: string  } 
  | { name: '_projectId_not_contains', alias?: string  } 
  | { name: '_projectId_starts_with', alias?: string  } 
  | { name: '_projectId_not_starts_with', alias?: string  } 
  | { name: '_projectId_ends_with', alias?: string  } 
  | { name: '_projectId_not_ends_with', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'submitted_messages_every', alias?: string  } 
  | { name: 'submitted_messages_some', alias?: string  } 
  | { name: 'submitted_messages_none', alias?: string  } 
  | { name: 'requested_messages_every', alias?: string  } 
  | { name: 'requested_messages_some', alias?: string  } 
  | { name: 'requested_messages_none', alias?: string  } 
  | { name: 'cc_messages_every', alias?: string  } 
  | { name: 'cc_messages_some', alias?: string  } 
  | { name: 'cc_messages_none', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'deleted_not', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'details_not', alias?: string  } 
  | { name: 'details_in', alias?: string  } 
  | { name: 'details_not_in', alias?: string  } 
  | { name: 'details_lt', alias?: string  } 
  | { name: 'details_lte', alias?: string  } 
  | { name: 'details_gt', alias?: string  } 
  | { name: 'details_gte', alias?: string  } 
  | { name: 'details_contains', alias?: string  } 
  | { name: 'details_not_contains', alias?: string  } 
  | { name: 'details_starts_with', alias?: string  } 
  | { name: 'details_not_starts_with', alias?: string  } 
  | { name: 'details_ends_with', alias?: string  } 
  | { name: 'details_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  | { name: 'zendesk_url_not', alias?: string  } 
  | { name: 'zendesk_url_in', alias?: string  } 
  | { name: 'zendesk_url_not_in', alias?: string  } 
  | { name: 'zendesk_url_lt', alias?: string  } 
  | { name: 'zendesk_url_lte', alias?: string  } 
  | { name: 'zendesk_url_gt', alias?: string  } 
  | { name: 'zendesk_url_gte', alias?: string  } 
  | { name: 'zendesk_url_contains', alias?: string  } 
  | { name: 'zendesk_url_not_contains', alias?: string  } 
  | { name: 'zendesk_url_starts_with', alias?: string  } 
  | { name: 'zendesk_url_not_starts_with', alias?: string  } 
  | { name: 'zendesk_url_ends_with', alias?: string  } 
  | { name: 'zendesk_url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProjectRightWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  project?: ProjectWhereInput | null
  right?: prisma.RIGHT | null
  right_not?: prisma.RIGHT | null
  right_in?: prisma.RIGHT[]
  right_not_in?: prisma.RIGHT[]
  person?: PersonWhereInput | null
  AND?: ProjectRightWhereInput[]
  OR?: ProjectRightWhereInput[]
  NOT?: ProjectRightWhereInput[]
}
export type ProjectRightWhereInputInputObject =
  | Extract<keyof ProjectRightWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'right_not', alias?: string  } 
  | { name: 'right_in', alias?: string  } 
  | { name: 'right_not_in', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AccountWhereUniqueInput {
  id?: string | null
  clientId?: string | null
  username?: string | null
}
export type AccountWhereUniqueInputInputObject =
  | Extract<keyof AccountWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'username', alias?: string  } 
  
export interface SubmessageWhereUniqueInput {
  id?: string | null
  clientId?: string | null
}
export type SubmessageWhereUniqueInputInputObject =
  | Extract<keyof SubmessageWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  
export interface MessageWhereUniqueInput {
  id?: string | null
  clientId?: string | null
}
export type MessageWhereUniqueInputInputObject =
  | Extract<keyof MessageWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  
export interface ProjectRightWhereUniqueInput {
  id?: string | null
}
export type ProjectRightWhereUniqueInputInputObject =
  | Extract<keyof ProjectRightWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PersonWhereUniqueInput {
  id?: string | null
  clientId?: string | null
}
export type PersonWhereUniqueInputInputObject =
  | Extract<keyof PersonWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  
export interface ProjectCreateInput {
  id?: string | null
  clientId?: string | null
  accounts?: AccountCreateManyWithoutProjectInput | null
  messages?: MessageCreateManyWithoutProjectInput | null
  persons?: PersonCreateManyWithoutProjectInput | null
  name?: string
}
export type ProjectCreateInputInputObject =
  | Extract<keyof ProjectCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'accounts', alias?: string  } 
  | { name: 'messages', alias?: string  } 
  | { name: 'persons', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface AccountCreateManyWithoutProjectInput {
  create?: AccountCreateWithoutProjectInput[]
  connect?: AccountWhereUniqueInput[]
}
export type AccountCreateManyWithoutProjectInputInputObject =
  | Extract<keyof AccountCreateManyWithoutProjectInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface AccountCreateWithoutProjectInput {
  id?: string | null
  clientId?: string | null
  lastSeenAt?: string
  deletedAt?: string | null
  person?: PersonCreateOneWithoutAccountInput
  reset_password_token?: string | null
  reset_password_exp_date?: string | null
  username?: string
  hash?: string
  need_onboarding?: boolean | null
  email_validated?: boolean | null
  emailConfirmToken?: string | null
}
export type AccountCreateWithoutProjectInputInputObject =
  | Extract<keyof AccountCreateWithoutProjectInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'lastSeenAt', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'reset_password_token', alias?: string  } 
  | { name: 'reset_password_exp_date', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'hash', alias?: string  } 
  | { name: 'need_onboarding', alias?: string  } 
  | { name: 'email_validated', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  
export interface PersonCreateOneWithoutAccountInput {
  create?: PersonCreateWithoutAccountInput | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonCreateOneWithoutAccountInputInputObject =
  | Extract<keyof PersonCreateOneWithoutAccountInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonCreateWithoutAccountInput {
  id?: string | null
  clientId?: string | null
  _projectId?: string | null
  project?: ProjectCreateOneWithoutPersonsInput
  right?: ProjectRightCreateOneWithoutPersonInput | null
  submitted_messages?: MessageCreateManyWithoutSubmitterInput | null
  requested_messages?: MessageCreateManyWithoutRequesterInput | null
  cc_messages?: MessageCreateManyWithoutCcsInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonCreateWithoutAccountInputInputObject =
  | Extract<keyof PersonCreateWithoutAccountInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'submitted_messages', alias?: string  } 
  | { name: 'requested_messages', alias?: string  } 
  | { name: 'cc_messages', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface ProjectCreateOneWithoutPersonsInput {
  create?: ProjectCreateWithoutPersonsInput | null
  connect?: ProjectWhereUniqueInput | null
}
export type ProjectCreateOneWithoutPersonsInputInputObject =
  | Extract<keyof ProjectCreateOneWithoutPersonsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectCreateWithoutPersonsInput {
  id?: string | null
  clientId?: string | null
  accounts?: AccountCreateManyWithoutProjectInput | null
  messages?: MessageCreateManyWithoutProjectInput | null
  name?: string
}
export type ProjectCreateWithoutPersonsInputInputObject =
  | Extract<keyof ProjectCreateWithoutPersonsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'accounts', alias?: string  } 
  | { name: 'messages', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface MessageCreateManyWithoutProjectInput {
  create?: MessageCreateWithoutProjectInput[]
  connect?: MessageWhereUniqueInput[]
}
export type MessageCreateManyWithoutProjectInputInputObject =
  | Extract<keyof MessageCreateManyWithoutProjectInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MessageCreateWithoutProjectInput {
  id?: string | null
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  sub_messages?: SubmessageCreateManyWithoutMessageInput | null
  submitter?: PersonCreateOneWithoutSubmitted_messagesInput
  requester?: PersonCreateOneWithoutRequested_messagesInput | null
  ccs?: PersonCreateManyWithoutCc_messagesInput | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageCreateWithoutProjectInputInputObject =
  | Extract<keyof MessageCreateWithoutProjectInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'sub_messages', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'requester', alias?: string  } 
  | { name: 'ccs', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface SubmessageCreateManyWithoutMessageInput {
  create?: SubmessageCreateWithoutMessageInput[]
  connect?: SubmessageWhereUniqueInput[]
}
export type SubmessageCreateManyWithoutMessageInputInputObject =
  | Extract<keyof SubmessageCreateManyWithoutMessageInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SubmessageCreateWithoutMessageInput {
  id?: string | null
  clientId?: string | null
  receivedAt?: string | null
  submitter?: PersonCreateOneInput
  integration_id?: string | null
  type?: prisma.MESSAGE_TYPE | null
  content?: string | null
}
export type SubmessageCreateWithoutMessageInputInputObject =
  | Extract<keyof SubmessageCreateWithoutMessageInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'content', alias?: string  } 
  
export interface PersonCreateOneInput {
  create?: PersonCreateInput | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonCreateOneInputInputObject =
  | Extract<keyof PersonCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonCreateInput {
  id?: string | null
  clientId?: string | null
  _projectId?: string | null
  project?: ProjectCreateOneWithoutPersonsInput
  right?: ProjectRightCreateOneWithoutPersonInput | null
  submitted_messages?: MessageCreateManyWithoutSubmitterInput | null
  requested_messages?: MessageCreateManyWithoutRequesterInput | null
  cc_messages?: MessageCreateManyWithoutCcsInput | null
  account?: AccountCreateOneWithoutPersonInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonCreateInputInputObject =
  | Extract<keyof PersonCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'submitted_messages', alias?: string  } 
  | { name: 'requested_messages', alias?: string  } 
  | { name: 'cc_messages', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface ProjectRightCreateOneWithoutPersonInput {
  create?: ProjectRightCreateWithoutPersonInput | null
  connect?: ProjectRightWhereUniqueInput | null
}
export type ProjectRightCreateOneWithoutPersonInputInputObject =
  | Extract<keyof ProjectRightCreateOneWithoutPersonInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectRightCreateWithoutPersonInput {
  id?: string | null
  project?: ProjectCreateOneInput
  right?: prisma.RIGHT
}
export type ProjectRightCreateWithoutPersonInputInputObject =
  | Extract<keyof ProjectRightCreateWithoutPersonInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  
export interface ProjectCreateOneInput {
  create?: ProjectCreateInput | null
  connect?: ProjectWhereUniqueInput | null
}
export type ProjectCreateOneInputInputObject =
  | Extract<keyof ProjectCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MessageCreateManyWithoutSubmitterInput {
  create?: MessageCreateWithoutSubmitterInput[]
  connect?: MessageWhereUniqueInput[]
}
export type MessageCreateManyWithoutSubmitterInputInputObject =
  | Extract<keyof MessageCreateManyWithoutSubmitterInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MessageCreateWithoutSubmitterInput {
  id?: string | null
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  project?: ProjectCreateOneWithoutMessagesInput
  sub_messages?: SubmessageCreateManyWithoutMessageInput | null
  requester?: PersonCreateOneWithoutRequested_messagesInput | null
  ccs?: PersonCreateManyWithoutCc_messagesInput | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageCreateWithoutSubmitterInputInputObject =
  | Extract<keyof MessageCreateWithoutSubmitterInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'sub_messages', alias?: string  } 
  | { name: 'requester', alias?: string  } 
  | { name: 'ccs', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface ProjectCreateOneWithoutMessagesInput {
  create?: ProjectCreateWithoutMessagesInput | null
  connect?: ProjectWhereUniqueInput | null
}
export type ProjectCreateOneWithoutMessagesInputInputObject =
  | Extract<keyof ProjectCreateOneWithoutMessagesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectCreateWithoutMessagesInput {
  id?: string | null
  clientId?: string | null
  accounts?: AccountCreateManyWithoutProjectInput | null
  persons?: PersonCreateManyWithoutProjectInput | null
  name?: string
}
export type ProjectCreateWithoutMessagesInputInputObject =
  | Extract<keyof ProjectCreateWithoutMessagesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'accounts', alias?: string  } 
  | { name: 'persons', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface PersonCreateManyWithoutProjectInput {
  create?: PersonCreateWithoutProjectInput[]
  connect?: PersonWhereUniqueInput[]
}
export type PersonCreateManyWithoutProjectInputInputObject =
  | Extract<keyof PersonCreateManyWithoutProjectInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonCreateWithoutProjectInput {
  id?: string | null
  clientId?: string | null
  _projectId?: string | null
  right?: ProjectRightCreateOneWithoutPersonInput | null
  submitted_messages?: MessageCreateManyWithoutSubmitterInput | null
  requested_messages?: MessageCreateManyWithoutRequesterInput | null
  cc_messages?: MessageCreateManyWithoutCcsInput | null
  account?: AccountCreateOneWithoutPersonInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonCreateWithoutProjectInputInputObject =
  | Extract<keyof PersonCreateWithoutProjectInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'submitted_messages', alias?: string  } 
  | { name: 'requested_messages', alias?: string  } 
  | { name: 'cc_messages', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface MessageCreateManyWithoutRequesterInput {
  create?: MessageCreateWithoutRequesterInput[]
  connect?: MessageWhereUniqueInput[]
}
export type MessageCreateManyWithoutRequesterInputInputObject =
  | Extract<keyof MessageCreateManyWithoutRequesterInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MessageCreateWithoutRequesterInput {
  id?: string | null
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  project?: ProjectCreateOneWithoutMessagesInput
  sub_messages?: SubmessageCreateManyWithoutMessageInput | null
  submitter?: PersonCreateOneWithoutSubmitted_messagesInput
  ccs?: PersonCreateManyWithoutCc_messagesInput | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageCreateWithoutRequesterInputInputObject =
  | Extract<keyof MessageCreateWithoutRequesterInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'sub_messages', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'ccs', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface PersonCreateOneWithoutSubmitted_messagesInput {
  create?: PersonCreateWithoutSubmitted_messagesInput | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonCreateOneWithoutSubmitted_messagesInputInputObject =
  | Extract<keyof PersonCreateOneWithoutSubmitted_messagesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonCreateWithoutSubmitted_messagesInput {
  id?: string | null
  clientId?: string | null
  _projectId?: string | null
  project?: ProjectCreateOneWithoutPersonsInput
  right?: ProjectRightCreateOneWithoutPersonInput | null
  requested_messages?: MessageCreateManyWithoutRequesterInput | null
  cc_messages?: MessageCreateManyWithoutCcsInput | null
  account?: AccountCreateOneWithoutPersonInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonCreateWithoutSubmitted_messagesInputInputObject =
  | Extract<keyof PersonCreateWithoutSubmitted_messagesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'requested_messages', alias?: string  } 
  | { name: 'cc_messages', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface MessageCreateManyWithoutCcsInput {
  create?: MessageCreateWithoutCcsInput[]
  connect?: MessageWhereUniqueInput[]
}
export type MessageCreateManyWithoutCcsInputInputObject =
  | Extract<keyof MessageCreateManyWithoutCcsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MessageCreateWithoutCcsInput {
  id?: string | null
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  project?: ProjectCreateOneWithoutMessagesInput
  sub_messages?: SubmessageCreateManyWithoutMessageInput | null
  submitter?: PersonCreateOneWithoutSubmitted_messagesInput
  requester?: PersonCreateOneWithoutRequested_messagesInput | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageCreateWithoutCcsInputInputObject =
  | Extract<keyof MessageCreateWithoutCcsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'sub_messages', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'requester', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface PersonCreateOneWithoutRequested_messagesInput {
  create?: PersonCreateWithoutRequested_messagesInput | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonCreateOneWithoutRequested_messagesInputInputObject =
  | Extract<keyof PersonCreateOneWithoutRequested_messagesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonCreateWithoutRequested_messagesInput {
  id?: string | null
  clientId?: string | null
  _projectId?: string | null
  project?: ProjectCreateOneWithoutPersonsInput
  right?: ProjectRightCreateOneWithoutPersonInput | null
  submitted_messages?: MessageCreateManyWithoutSubmitterInput | null
  cc_messages?: MessageCreateManyWithoutCcsInput | null
  account?: AccountCreateOneWithoutPersonInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonCreateWithoutRequested_messagesInputInputObject =
  | Extract<keyof PersonCreateWithoutRequested_messagesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'submitted_messages', alias?: string  } 
  | { name: 'cc_messages', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface AccountCreateOneWithoutPersonInput {
  create?: AccountCreateWithoutPersonInput | null
  connect?: AccountWhereUniqueInput | null
}
export type AccountCreateOneWithoutPersonInputInputObject =
  | Extract<keyof AccountCreateOneWithoutPersonInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface AccountCreateWithoutPersonInput {
  id?: string | null
  clientId?: string | null
  lastSeenAt?: string
  deletedAt?: string | null
  project?: ProjectCreateOneWithoutAccountsInput
  reset_password_token?: string | null
  reset_password_exp_date?: string | null
  username?: string
  hash?: string
  need_onboarding?: boolean | null
  email_validated?: boolean | null
  emailConfirmToken?: string | null
}
export type AccountCreateWithoutPersonInputInputObject =
  | Extract<keyof AccountCreateWithoutPersonInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'lastSeenAt', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'reset_password_token', alias?: string  } 
  | { name: 'reset_password_exp_date', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'hash', alias?: string  } 
  | { name: 'need_onboarding', alias?: string  } 
  | { name: 'email_validated', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  
export interface ProjectCreateOneWithoutAccountsInput {
  create?: ProjectCreateWithoutAccountsInput | null
  connect?: ProjectWhereUniqueInput | null
}
export type ProjectCreateOneWithoutAccountsInputInputObject =
  | Extract<keyof ProjectCreateOneWithoutAccountsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectCreateWithoutAccountsInput {
  id?: string | null
  clientId?: string | null
  messages?: MessageCreateManyWithoutProjectInput | null
  persons?: PersonCreateManyWithoutProjectInput | null
  name?: string
}
export type ProjectCreateWithoutAccountsInputInputObject =
  | Extract<keyof ProjectCreateWithoutAccountsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'messages', alias?: string  } 
  | { name: 'persons', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface PersonCreateManyWithoutCc_messagesInput {
  create?: PersonCreateWithoutCc_messagesInput[]
  connect?: PersonWhereUniqueInput[]
}
export type PersonCreateManyWithoutCc_messagesInputInputObject =
  | Extract<keyof PersonCreateManyWithoutCc_messagesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonCreateWithoutCc_messagesInput {
  id?: string | null
  clientId?: string | null
  _projectId?: string | null
  project?: ProjectCreateOneWithoutPersonsInput
  right?: ProjectRightCreateOneWithoutPersonInput | null
  submitted_messages?: MessageCreateManyWithoutSubmitterInput | null
  requested_messages?: MessageCreateManyWithoutRequesterInput | null
  account?: AccountCreateOneWithoutPersonInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonCreateWithoutCc_messagesInputInputObject =
  | Extract<keyof PersonCreateWithoutCc_messagesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'submitted_messages', alias?: string  } 
  | { name: 'requested_messages', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface ProjectUpdateInput {
  clientId?: string | null
  accounts?: AccountUpdateManyWithoutProjectInput | null
  messages?: MessageUpdateManyWithoutProjectInput | null
  persons?: PersonUpdateManyWithoutProjectInput | null
  name?: string | null
}
export type ProjectUpdateInputInputObject =
  | Extract<keyof ProjectUpdateInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'accounts', alias?: string  } 
  | { name: 'messages', alias?: string  } 
  | { name: 'persons', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface AccountUpdateManyWithoutProjectInput {
  create?: AccountCreateWithoutProjectInput[]
  delete?: AccountWhereUniqueInput[]
  connect?: AccountWhereUniqueInput[]
  set?: AccountWhereUniqueInput[]
  disconnect?: AccountWhereUniqueInput[]
  update?: AccountUpdateWithWhereUniqueWithoutProjectInput[]
  upsert?: AccountUpsertWithWhereUniqueWithoutProjectInput[]
  deleteMany?: AccountScalarWhereInput[]
  updateMany?: AccountUpdateManyWithWhereNestedInput[]
}
export type AccountUpdateManyWithoutProjectInputInputObject =
  | Extract<keyof AccountUpdateManyWithoutProjectInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface AccountUpdateWithWhereUniqueWithoutProjectInput {
  where?: AccountWhereUniqueInput
  data?: AccountUpdateWithoutProjectDataInput
}
export type AccountUpdateWithWhereUniqueWithoutProjectInputInputObject =
  | Extract<keyof AccountUpdateWithWhereUniqueWithoutProjectInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface AccountUpdateWithoutProjectDataInput {
  clientId?: string | null
  lastSeenAt?: string | null
  deletedAt?: string | null
  person?: PersonUpdateOneRequiredWithoutAccountInput | null
  reset_password_token?: string | null
  reset_password_exp_date?: string | null
  username?: string | null
  hash?: string | null
  need_onboarding?: boolean | null
  email_validated?: boolean | null
  emailConfirmToken?: string | null
}
export type AccountUpdateWithoutProjectDataInputInputObject =
  | Extract<keyof AccountUpdateWithoutProjectDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'lastSeenAt', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'reset_password_token', alias?: string  } 
  | { name: 'reset_password_exp_date', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'hash', alias?: string  } 
  | { name: 'need_onboarding', alias?: string  } 
  | { name: 'email_validated', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  
export interface PersonUpdateOneRequiredWithoutAccountInput {
  create?: PersonCreateWithoutAccountInput | null
  update?: PersonUpdateWithoutAccountDataInput | null
  upsert?: PersonUpsertWithoutAccountInput | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonUpdateOneRequiredWithoutAccountInputInputObject =
  | Extract<keyof PersonUpdateOneRequiredWithoutAccountInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonUpdateWithoutAccountDataInput {
  clientId?: string | null
  _projectId?: string | null
  project?: ProjectUpdateOneRequiredWithoutPersonsInput | null
  right?: ProjectRightUpdateOneWithoutPersonInput | null
  submitted_messages?: MessageUpdateManyWithoutSubmitterInput | null
  requested_messages?: MessageUpdateManyWithoutRequesterInput | null
  cc_messages?: MessageUpdateManyWithoutCcsInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string | null
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonUpdateWithoutAccountDataInputInputObject =
  | Extract<keyof PersonUpdateWithoutAccountDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'submitted_messages', alias?: string  } 
  | { name: 'requested_messages', alias?: string  } 
  | { name: 'cc_messages', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface ProjectUpdateOneRequiredWithoutPersonsInput {
  create?: ProjectCreateWithoutPersonsInput | null
  update?: ProjectUpdateWithoutPersonsDataInput | null
  upsert?: ProjectUpsertWithoutPersonsInput | null
  connect?: ProjectWhereUniqueInput | null
}
export type ProjectUpdateOneRequiredWithoutPersonsInputInputObject =
  | Extract<keyof ProjectUpdateOneRequiredWithoutPersonsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectUpdateWithoutPersonsDataInput {
  clientId?: string | null
  accounts?: AccountUpdateManyWithoutProjectInput | null
  messages?: MessageUpdateManyWithoutProjectInput | null
  name?: string | null
}
export type ProjectUpdateWithoutPersonsDataInputInputObject =
  | Extract<keyof ProjectUpdateWithoutPersonsDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'accounts', alias?: string  } 
  | { name: 'messages', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface MessageUpdateManyWithoutProjectInput {
  create?: MessageCreateWithoutProjectInput[]
  delete?: MessageWhereUniqueInput[]
  connect?: MessageWhereUniqueInput[]
  set?: MessageWhereUniqueInput[]
  disconnect?: MessageWhereUniqueInput[]
  update?: MessageUpdateWithWhereUniqueWithoutProjectInput[]
  upsert?: MessageUpsertWithWhereUniqueWithoutProjectInput[]
  deleteMany?: MessageScalarWhereInput[]
  updateMany?: MessageUpdateManyWithWhereNestedInput[]
}
export type MessageUpdateManyWithoutProjectInputInputObject =
  | Extract<keyof MessageUpdateManyWithoutProjectInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MessageUpdateWithWhereUniqueWithoutProjectInput {
  where?: MessageWhereUniqueInput
  data?: MessageUpdateWithoutProjectDataInput
}
export type MessageUpdateWithWhereUniqueWithoutProjectInputInputObject =
  | Extract<keyof MessageUpdateWithWhereUniqueWithoutProjectInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MessageUpdateWithoutProjectDataInput {
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  sub_messages?: SubmessageUpdateManyWithoutMessageInput | null
  submitter?: PersonUpdateOneRequiredWithoutSubmitted_messagesInput | null
  requester?: PersonUpdateOneWithoutRequested_messagesInput | null
  ccs?: PersonUpdateManyWithoutCc_messagesInput | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageUpdateWithoutProjectDataInputInputObject =
  | Extract<keyof MessageUpdateWithoutProjectDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'sub_messages', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'requester', alias?: string  } 
  | { name: 'ccs', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface SubmessageUpdateManyWithoutMessageInput {
  create?: SubmessageCreateWithoutMessageInput[]
  delete?: SubmessageWhereUniqueInput[]
  connect?: SubmessageWhereUniqueInput[]
  set?: SubmessageWhereUniqueInput[]
  disconnect?: SubmessageWhereUniqueInput[]
  update?: SubmessageUpdateWithWhereUniqueWithoutMessageInput[]
  upsert?: SubmessageUpsertWithWhereUniqueWithoutMessageInput[]
  deleteMany?: SubmessageScalarWhereInput[]
  updateMany?: SubmessageUpdateManyWithWhereNestedInput[]
}
export type SubmessageUpdateManyWithoutMessageInputInputObject =
  | Extract<keyof SubmessageUpdateManyWithoutMessageInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface SubmessageUpdateWithWhereUniqueWithoutMessageInput {
  where?: SubmessageWhereUniqueInput
  data?: SubmessageUpdateWithoutMessageDataInput
}
export type SubmessageUpdateWithWhereUniqueWithoutMessageInputInputObject =
  | Extract<keyof SubmessageUpdateWithWhereUniqueWithoutMessageInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface SubmessageUpdateWithoutMessageDataInput {
  clientId?: string | null
  receivedAt?: string | null
  submitter?: PersonUpdateOneRequiredInput | null
  integration_id?: string | null
  type?: prisma.MESSAGE_TYPE | null
  content?: string | null
}
export type SubmessageUpdateWithoutMessageDataInputInputObject =
  | Extract<keyof SubmessageUpdateWithoutMessageDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'content', alias?: string  } 
  
export interface PersonUpdateOneRequiredInput {
  create?: PersonCreateInput | null
  update?: PersonUpdateDataInput | null
  upsert?: PersonUpsertNestedInput | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonUpdateOneRequiredInputInputObject =
  | Extract<keyof PersonUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonUpdateDataInput {
  clientId?: string | null
  _projectId?: string | null
  project?: ProjectUpdateOneRequiredWithoutPersonsInput | null
  right?: ProjectRightUpdateOneWithoutPersonInput | null
  submitted_messages?: MessageUpdateManyWithoutSubmitterInput | null
  requested_messages?: MessageUpdateManyWithoutRequesterInput | null
  cc_messages?: MessageUpdateManyWithoutCcsInput | null
  account?: AccountUpdateOneWithoutPersonInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string | null
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonUpdateDataInputInputObject =
  | Extract<keyof PersonUpdateDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'submitted_messages', alias?: string  } 
  | { name: 'requested_messages', alias?: string  } 
  | { name: 'cc_messages', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface ProjectRightUpdateOneWithoutPersonInput {
  create?: ProjectRightCreateWithoutPersonInput | null
  update?: ProjectRightUpdateWithoutPersonDataInput | null
  upsert?: ProjectRightUpsertWithoutPersonInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: ProjectRightWhereUniqueInput | null
}
export type ProjectRightUpdateOneWithoutPersonInputInputObject =
  | Extract<keyof ProjectRightUpdateOneWithoutPersonInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectRightUpdateWithoutPersonDataInput {
  project?: ProjectUpdateOneRequiredInput | null
  right?: prisma.RIGHT | null
}
export type ProjectRightUpdateWithoutPersonDataInputInputObject =
  | Extract<keyof ProjectRightUpdateWithoutPersonDataInput, string>
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  
export interface ProjectUpdateOneRequiredInput {
  create?: ProjectCreateInput | null
  update?: ProjectUpdateDataInput | null
  upsert?: ProjectUpsertNestedInput | null
  connect?: ProjectWhereUniqueInput | null
}
export type ProjectUpdateOneRequiredInputInputObject =
  | Extract<keyof ProjectUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectUpdateDataInput {
  clientId?: string | null
  accounts?: AccountUpdateManyWithoutProjectInput | null
  messages?: MessageUpdateManyWithoutProjectInput | null
  persons?: PersonUpdateManyWithoutProjectInput | null
  name?: string | null
}
export type ProjectUpdateDataInputInputObject =
  | Extract<keyof ProjectUpdateDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'accounts', alias?: string  } 
  | { name: 'messages', alias?: string  } 
  | { name: 'persons', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface PersonUpdateManyWithoutProjectInput {
  create?: PersonCreateWithoutProjectInput[]
  delete?: PersonWhereUniqueInput[]
  connect?: PersonWhereUniqueInput[]
  set?: PersonWhereUniqueInput[]
  disconnect?: PersonWhereUniqueInput[]
  update?: PersonUpdateWithWhereUniqueWithoutProjectInput[]
  upsert?: PersonUpsertWithWhereUniqueWithoutProjectInput[]
  deleteMany?: PersonScalarWhereInput[]
  updateMany?: PersonUpdateManyWithWhereNestedInput[]
}
export type PersonUpdateManyWithoutProjectInputInputObject =
  | Extract<keyof PersonUpdateManyWithoutProjectInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface PersonUpdateWithWhereUniqueWithoutProjectInput {
  where?: PersonWhereUniqueInput
  data?: PersonUpdateWithoutProjectDataInput
}
export type PersonUpdateWithWhereUniqueWithoutProjectInputInputObject =
  | Extract<keyof PersonUpdateWithWhereUniqueWithoutProjectInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PersonUpdateWithoutProjectDataInput {
  clientId?: string | null
  _projectId?: string | null
  right?: ProjectRightUpdateOneWithoutPersonInput | null
  submitted_messages?: MessageUpdateManyWithoutSubmitterInput | null
  requested_messages?: MessageUpdateManyWithoutRequesterInput | null
  cc_messages?: MessageUpdateManyWithoutCcsInput | null
  account?: AccountUpdateOneWithoutPersonInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string | null
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonUpdateWithoutProjectDataInputInputObject =
  | Extract<keyof PersonUpdateWithoutProjectDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'submitted_messages', alias?: string  } 
  | { name: 'requested_messages', alias?: string  } 
  | { name: 'cc_messages', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface MessageUpdateManyWithoutSubmitterInput {
  create?: MessageCreateWithoutSubmitterInput[]
  delete?: MessageWhereUniqueInput[]
  connect?: MessageWhereUniqueInput[]
  set?: MessageWhereUniqueInput[]
  disconnect?: MessageWhereUniqueInput[]
  update?: MessageUpdateWithWhereUniqueWithoutSubmitterInput[]
  upsert?: MessageUpsertWithWhereUniqueWithoutSubmitterInput[]
  deleteMany?: MessageScalarWhereInput[]
  updateMany?: MessageUpdateManyWithWhereNestedInput[]
}
export type MessageUpdateManyWithoutSubmitterInputInputObject =
  | Extract<keyof MessageUpdateManyWithoutSubmitterInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MessageUpdateWithWhereUniqueWithoutSubmitterInput {
  where?: MessageWhereUniqueInput
  data?: MessageUpdateWithoutSubmitterDataInput
}
export type MessageUpdateWithWhereUniqueWithoutSubmitterInputInputObject =
  | Extract<keyof MessageUpdateWithWhereUniqueWithoutSubmitterInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MessageUpdateWithoutSubmitterDataInput {
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  project?: ProjectUpdateOneRequiredWithoutMessagesInput | null
  sub_messages?: SubmessageUpdateManyWithoutMessageInput | null
  requester?: PersonUpdateOneWithoutRequested_messagesInput | null
  ccs?: PersonUpdateManyWithoutCc_messagesInput | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageUpdateWithoutSubmitterDataInputInputObject =
  | Extract<keyof MessageUpdateWithoutSubmitterDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'sub_messages', alias?: string  } 
  | { name: 'requester', alias?: string  } 
  | { name: 'ccs', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface ProjectUpdateOneRequiredWithoutMessagesInput {
  create?: ProjectCreateWithoutMessagesInput | null
  update?: ProjectUpdateWithoutMessagesDataInput | null
  upsert?: ProjectUpsertWithoutMessagesInput | null
  connect?: ProjectWhereUniqueInput | null
}
export type ProjectUpdateOneRequiredWithoutMessagesInputInputObject =
  | Extract<keyof ProjectUpdateOneRequiredWithoutMessagesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectUpdateWithoutMessagesDataInput {
  clientId?: string | null
  accounts?: AccountUpdateManyWithoutProjectInput | null
  persons?: PersonUpdateManyWithoutProjectInput | null
  name?: string | null
}
export type ProjectUpdateWithoutMessagesDataInputInputObject =
  | Extract<keyof ProjectUpdateWithoutMessagesDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'accounts', alias?: string  } 
  | { name: 'persons', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface ProjectUpsertWithoutMessagesInput {
  update?: ProjectUpdateWithoutMessagesDataInput
  create?: ProjectCreateWithoutMessagesInput
}
export type ProjectUpsertWithoutMessagesInputInputObject =
  | Extract<keyof ProjectUpsertWithoutMessagesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PersonUpdateOneWithoutRequested_messagesInput {
  create?: PersonCreateWithoutRequested_messagesInput | null
  update?: PersonUpdateWithoutRequested_messagesDataInput | null
  upsert?: PersonUpsertWithoutRequested_messagesInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonUpdateOneWithoutRequested_messagesInputInputObject =
  | Extract<keyof PersonUpdateOneWithoutRequested_messagesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonUpdateWithoutRequested_messagesDataInput {
  clientId?: string | null
  _projectId?: string | null
  project?: ProjectUpdateOneRequiredWithoutPersonsInput | null
  right?: ProjectRightUpdateOneWithoutPersonInput | null
  submitted_messages?: MessageUpdateManyWithoutSubmitterInput | null
  cc_messages?: MessageUpdateManyWithoutCcsInput | null
  account?: AccountUpdateOneWithoutPersonInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string | null
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonUpdateWithoutRequested_messagesDataInputInputObject =
  | Extract<keyof PersonUpdateWithoutRequested_messagesDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'submitted_messages', alias?: string  } 
  | { name: 'cc_messages', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface MessageUpdateManyWithoutCcsInput {
  create?: MessageCreateWithoutCcsInput[]
  delete?: MessageWhereUniqueInput[]
  connect?: MessageWhereUniqueInput[]
  set?: MessageWhereUniqueInput[]
  disconnect?: MessageWhereUniqueInput[]
  update?: MessageUpdateWithWhereUniqueWithoutCcsInput[]
  upsert?: MessageUpsertWithWhereUniqueWithoutCcsInput[]
  deleteMany?: MessageScalarWhereInput[]
  updateMany?: MessageUpdateManyWithWhereNestedInput[]
}
export type MessageUpdateManyWithoutCcsInputInputObject =
  | Extract<keyof MessageUpdateManyWithoutCcsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MessageUpdateWithWhereUniqueWithoutCcsInput {
  where?: MessageWhereUniqueInput
  data?: MessageUpdateWithoutCcsDataInput
}
export type MessageUpdateWithWhereUniqueWithoutCcsInputInputObject =
  | Extract<keyof MessageUpdateWithWhereUniqueWithoutCcsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MessageUpdateWithoutCcsDataInput {
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  project?: ProjectUpdateOneRequiredWithoutMessagesInput | null
  sub_messages?: SubmessageUpdateManyWithoutMessageInput | null
  submitter?: PersonUpdateOneRequiredWithoutSubmitted_messagesInput | null
  requester?: PersonUpdateOneWithoutRequested_messagesInput | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageUpdateWithoutCcsDataInputInputObject =
  | Extract<keyof MessageUpdateWithoutCcsDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'sub_messages', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'requester', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface PersonUpdateOneRequiredWithoutSubmitted_messagesInput {
  create?: PersonCreateWithoutSubmitted_messagesInput | null
  update?: PersonUpdateWithoutSubmitted_messagesDataInput | null
  upsert?: PersonUpsertWithoutSubmitted_messagesInput | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonUpdateOneRequiredWithoutSubmitted_messagesInputInputObject =
  | Extract<keyof PersonUpdateOneRequiredWithoutSubmitted_messagesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonUpdateWithoutSubmitted_messagesDataInput {
  clientId?: string | null
  _projectId?: string | null
  project?: ProjectUpdateOneRequiredWithoutPersonsInput | null
  right?: ProjectRightUpdateOneWithoutPersonInput | null
  requested_messages?: MessageUpdateManyWithoutRequesterInput | null
  cc_messages?: MessageUpdateManyWithoutCcsInput | null
  account?: AccountUpdateOneWithoutPersonInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string | null
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonUpdateWithoutSubmitted_messagesDataInputInputObject =
  | Extract<keyof PersonUpdateWithoutSubmitted_messagesDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'requested_messages', alias?: string  } 
  | { name: 'cc_messages', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface MessageUpdateManyWithoutRequesterInput {
  create?: MessageCreateWithoutRequesterInput[]
  delete?: MessageWhereUniqueInput[]
  connect?: MessageWhereUniqueInput[]
  set?: MessageWhereUniqueInput[]
  disconnect?: MessageWhereUniqueInput[]
  update?: MessageUpdateWithWhereUniqueWithoutRequesterInput[]
  upsert?: MessageUpsertWithWhereUniqueWithoutRequesterInput[]
  deleteMany?: MessageScalarWhereInput[]
  updateMany?: MessageUpdateManyWithWhereNestedInput[]
}
export type MessageUpdateManyWithoutRequesterInputInputObject =
  | Extract<keyof MessageUpdateManyWithoutRequesterInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MessageUpdateWithWhereUniqueWithoutRequesterInput {
  where?: MessageWhereUniqueInput
  data?: MessageUpdateWithoutRequesterDataInput
}
export type MessageUpdateWithWhereUniqueWithoutRequesterInputInputObject =
  | Extract<keyof MessageUpdateWithWhereUniqueWithoutRequesterInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MessageUpdateWithoutRequesterDataInput {
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  project?: ProjectUpdateOneRequiredWithoutMessagesInput | null
  sub_messages?: SubmessageUpdateManyWithoutMessageInput | null
  submitter?: PersonUpdateOneRequiredWithoutSubmitted_messagesInput | null
  ccs?: PersonUpdateManyWithoutCc_messagesInput | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageUpdateWithoutRequesterDataInputInputObject =
  | Extract<keyof MessageUpdateWithoutRequesterDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'sub_messages', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'ccs', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface PersonUpdateManyWithoutCc_messagesInput {
  create?: PersonCreateWithoutCc_messagesInput[]
  delete?: PersonWhereUniqueInput[]
  connect?: PersonWhereUniqueInput[]
  set?: PersonWhereUniqueInput[]
  disconnect?: PersonWhereUniqueInput[]
  update?: PersonUpdateWithWhereUniqueWithoutCc_messagesInput[]
  upsert?: PersonUpsertWithWhereUniqueWithoutCc_messagesInput[]
  deleteMany?: PersonScalarWhereInput[]
  updateMany?: PersonUpdateManyWithWhereNestedInput[]
}
export type PersonUpdateManyWithoutCc_messagesInputInputObject =
  | Extract<keyof PersonUpdateManyWithoutCc_messagesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface PersonUpdateWithWhereUniqueWithoutCc_messagesInput {
  where?: PersonWhereUniqueInput
  data?: PersonUpdateWithoutCc_messagesDataInput
}
export type PersonUpdateWithWhereUniqueWithoutCc_messagesInputInputObject =
  | Extract<keyof PersonUpdateWithWhereUniqueWithoutCc_messagesInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PersonUpdateWithoutCc_messagesDataInput {
  clientId?: string | null
  _projectId?: string | null
  project?: ProjectUpdateOneRequiredWithoutPersonsInput | null
  right?: ProjectRightUpdateOneWithoutPersonInput | null
  submitted_messages?: MessageUpdateManyWithoutSubmitterInput | null
  requested_messages?: MessageUpdateManyWithoutRequesterInput | null
  account?: AccountUpdateOneWithoutPersonInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string | null
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonUpdateWithoutCc_messagesDataInputInputObject =
  | Extract<keyof PersonUpdateWithoutCc_messagesDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'submitted_messages', alias?: string  } 
  | { name: 'requested_messages', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface AccountUpdateOneWithoutPersonInput {
  create?: AccountCreateWithoutPersonInput | null
  update?: AccountUpdateWithoutPersonDataInput | null
  upsert?: AccountUpsertWithoutPersonInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: AccountWhereUniqueInput | null
}
export type AccountUpdateOneWithoutPersonInputInputObject =
  | Extract<keyof AccountUpdateOneWithoutPersonInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface AccountUpdateWithoutPersonDataInput {
  clientId?: string | null
  lastSeenAt?: string | null
  deletedAt?: string | null
  project?: ProjectUpdateOneRequiredWithoutAccountsInput | null
  reset_password_token?: string | null
  reset_password_exp_date?: string | null
  username?: string | null
  hash?: string | null
  need_onboarding?: boolean | null
  email_validated?: boolean | null
  emailConfirmToken?: string | null
}
export type AccountUpdateWithoutPersonDataInputInputObject =
  | Extract<keyof AccountUpdateWithoutPersonDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'lastSeenAt', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'reset_password_token', alias?: string  } 
  | { name: 'reset_password_exp_date', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'hash', alias?: string  } 
  | { name: 'need_onboarding', alias?: string  } 
  | { name: 'email_validated', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  
export interface ProjectUpdateOneRequiredWithoutAccountsInput {
  create?: ProjectCreateWithoutAccountsInput | null
  update?: ProjectUpdateWithoutAccountsDataInput | null
  upsert?: ProjectUpsertWithoutAccountsInput | null
  connect?: ProjectWhereUniqueInput | null
}
export type ProjectUpdateOneRequiredWithoutAccountsInputInputObject =
  | Extract<keyof ProjectUpdateOneRequiredWithoutAccountsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProjectUpdateWithoutAccountsDataInput {
  clientId?: string | null
  messages?: MessageUpdateManyWithoutProjectInput | null
  persons?: PersonUpdateManyWithoutProjectInput | null
  name?: string | null
}
export type ProjectUpdateWithoutAccountsDataInputInputObject =
  | Extract<keyof ProjectUpdateWithoutAccountsDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'messages', alias?: string  } 
  | { name: 'persons', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface ProjectUpsertWithoutAccountsInput {
  update?: ProjectUpdateWithoutAccountsDataInput
  create?: ProjectCreateWithoutAccountsInput
}
export type ProjectUpsertWithoutAccountsInputInputObject =
  | Extract<keyof ProjectUpsertWithoutAccountsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface AccountUpsertWithoutPersonInput {
  update?: AccountUpdateWithoutPersonDataInput
  create?: AccountCreateWithoutPersonInput
}
export type AccountUpsertWithoutPersonInputInputObject =
  | Extract<keyof AccountUpsertWithoutPersonInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PersonUpsertWithWhereUniqueWithoutCc_messagesInput {
  where?: PersonWhereUniqueInput
  update?: PersonUpdateWithoutCc_messagesDataInput
  create?: PersonCreateWithoutCc_messagesInput
}
export type PersonUpsertWithWhereUniqueWithoutCc_messagesInputInputObject =
  | Extract<keyof PersonUpsertWithWhereUniqueWithoutCc_messagesInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PersonScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  clientId?: string | null
  clientId_not?: string | null
  clientId_in?: string[]
  clientId_not_in?: string[]
  clientId_lt?: string | null
  clientId_lte?: string | null
  clientId_gt?: string | null
  clientId_gte?: string | null
  clientId_contains?: string | null
  clientId_not_contains?: string | null
  clientId_starts_with?: string | null
  clientId_not_starts_with?: string | null
  clientId_ends_with?: string | null
  clientId_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  _projectId?: string | null
  _projectId_not?: string | null
  _projectId_in?: string[]
  _projectId_not_in?: string[]
  _projectId_lt?: string | null
  _projectId_lte?: string | null
  _projectId_gt?: string | null
  _projectId_gte?: string | null
  _projectId_contains?: string | null
  _projectId_not_contains?: string | null
  _projectId_starts_with?: string | null
  _projectId_not_starts_with?: string | null
  _projectId_ends_with?: string | null
  _projectId_not_ends_with?: string | null
  deleted?: boolean | null
  deleted_not?: boolean | null
  type?: prisma.PERSON_TYPE | null
  type_not?: prisma.PERSON_TYPE | null
  type_in?: prisma.PERSON_TYPE[]
  type_not_in?: prisma.PERSON_TYPE[]
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  details?: string | null
  details_not?: string | null
  details_in?: string[]
  details_not_in?: string[]
  details_lt?: string | null
  details_lte?: string | null
  details_gt?: string | null
  details_gte?: string | null
  details_contains?: string | null
  details_not_contains?: string | null
  details_starts_with?: string | null
  details_not_starts_with?: string | null
  details_ends_with?: string | null
  details_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  zendesk_url?: string | null
  zendesk_url_not?: string | null
  zendesk_url_in?: string[]
  zendesk_url_not_in?: string[]
  zendesk_url_lt?: string | null
  zendesk_url_lte?: string | null
  zendesk_url_gt?: string | null
  zendesk_url_gte?: string | null
  zendesk_url_contains?: string | null
  zendesk_url_not_contains?: string | null
  zendesk_url_starts_with?: string | null
  zendesk_url_not_starts_with?: string | null
  zendesk_url_ends_with?: string | null
  zendesk_url_not_ends_with?: string | null
  AND?: PersonScalarWhereInput[]
  OR?: PersonScalarWhereInput[]
  NOT?: PersonScalarWhereInput[]
}
export type PersonScalarWhereInputInputObject =
  | Extract<keyof PersonScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'clientId_not', alias?: string  } 
  | { name: 'clientId_in', alias?: string  } 
  | { name: 'clientId_not_in', alias?: string  } 
  | { name: 'clientId_lt', alias?: string  } 
  | { name: 'clientId_lte', alias?: string  } 
  | { name: 'clientId_gt', alias?: string  } 
  | { name: 'clientId_gte', alias?: string  } 
  | { name: 'clientId_contains', alias?: string  } 
  | { name: 'clientId_not_contains', alias?: string  } 
  | { name: 'clientId_starts_with', alias?: string  } 
  | { name: 'clientId_not_starts_with', alias?: string  } 
  | { name: 'clientId_ends_with', alias?: string  } 
  | { name: 'clientId_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: '_projectId_not', alias?: string  } 
  | { name: '_projectId_in', alias?: string  } 
  | { name: '_projectId_not_in', alias?: string  } 
  | { name: '_projectId_lt', alias?: string  } 
  | { name: '_projectId_lte', alias?: string  } 
  | { name: '_projectId_gt', alias?: string  } 
  | { name: '_projectId_gte', alias?: string  } 
  | { name: '_projectId_contains', alias?: string  } 
  | { name: '_projectId_not_contains', alias?: string  } 
  | { name: '_projectId_starts_with', alias?: string  } 
  | { name: '_projectId_not_starts_with', alias?: string  } 
  | { name: '_projectId_ends_with', alias?: string  } 
  | { name: '_projectId_not_ends_with', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'deleted_not', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'details_not', alias?: string  } 
  | { name: 'details_in', alias?: string  } 
  | { name: 'details_not_in', alias?: string  } 
  | { name: 'details_lt', alias?: string  } 
  | { name: 'details_lte', alias?: string  } 
  | { name: 'details_gt', alias?: string  } 
  | { name: 'details_gte', alias?: string  } 
  | { name: 'details_contains', alias?: string  } 
  | { name: 'details_not_contains', alias?: string  } 
  | { name: 'details_starts_with', alias?: string  } 
  | { name: 'details_not_starts_with', alias?: string  } 
  | { name: 'details_ends_with', alias?: string  } 
  | { name: 'details_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  | { name: 'zendesk_url_not', alias?: string  } 
  | { name: 'zendesk_url_in', alias?: string  } 
  | { name: 'zendesk_url_not_in', alias?: string  } 
  | { name: 'zendesk_url_lt', alias?: string  } 
  | { name: 'zendesk_url_lte', alias?: string  } 
  | { name: 'zendesk_url_gt', alias?: string  } 
  | { name: 'zendesk_url_gte', alias?: string  } 
  | { name: 'zendesk_url_contains', alias?: string  } 
  | { name: 'zendesk_url_not_contains', alias?: string  } 
  | { name: 'zendesk_url_starts_with', alias?: string  } 
  | { name: 'zendesk_url_not_starts_with', alias?: string  } 
  | { name: 'zendesk_url_ends_with', alias?: string  } 
  | { name: 'zendesk_url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PersonUpdateManyWithWhereNestedInput {
  where?: PersonScalarWhereInput
  data?: PersonUpdateManyDataInput
}
export type PersonUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof PersonUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PersonUpdateManyDataInput {
  clientId?: string | null
  _projectId?: string | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string | null
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonUpdateManyDataInputInputObject =
  | Extract<keyof PersonUpdateManyDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface MessageUpsertWithWhereUniqueWithoutRequesterInput {
  where?: MessageWhereUniqueInput
  update?: MessageUpdateWithoutRequesterDataInput
  create?: MessageCreateWithoutRequesterInput
}
export type MessageUpsertWithWhereUniqueWithoutRequesterInputInputObject =
  | Extract<keyof MessageUpsertWithWhereUniqueWithoutRequesterInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MessageScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  clientId?: string | null
  clientId_not?: string | null
  clientId_in?: string[]
  clientId_not_in?: string[]
  clientId_lt?: string | null
  clientId_lte?: string | null
  clientId_gt?: string | null
  clientId_gte?: string | null
  clientId_contains?: string | null
  clientId_not_contains?: string | null
  clientId_starts_with?: string | null
  clientId_not_starts_with?: string | null
  clientId_ends_with?: string | null
  clientId_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  receivedAt?: string | null
  receivedAt_not?: string | null
  receivedAt_in?: string[]
  receivedAt_not_in?: string[]
  receivedAt_lt?: string | null
  receivedAt_lte?: string | null
  receivedAt_gt?: string | null
  receivedAt_gte?: string | null
  _projectId?: string | null
  _projectId_not?: string | null
  _projectId_in?: string[]
  _projectId_not_in?: string[]
  _projectId_lt?: string | null
  _projectId_lte?: string | null
  _projectId_gt?: string | null
  _projectId_gte?: string | null
  _projectId_contains?: string | null
  _projectId_not_contains?: string | null
  _projectId_starts_with?: string | null
  _projectId_not_starts_with?: string | null
  _projectId_ends_with?: string | null
  _projectId_not_ends_with?: string | null
  integration_url?: string | null
  integration_url_not?: string | null
  integration_url_in?: string[]
  integration_url_not_in?: string[]
  integration_url_lt?: string | null
  integration_url_lte?: string | null
  integration_url_gt?: string | null
  integration_url_gte?: string | null
  integration_url_contains?: string | null
  integration_url_not_contains?: string | null
  integration_url_starts_with?: string | null
  integration_url_not_starts_with?: string | null
  integration_url_ends_with?: string | null
  integration_url_not_ends_with?: string | null
  integration_id?: string | null
  integration_id_not?: string | null
  integration_id_in?: string[]
  integration_id_not_in?: string[]
  integration_id_lt?: string | null
  integration_id_lte?: string | null
  integration_id_gt?: string | null
  integration_id_gte?: string | null
  integration_id_contains?: string | null
  integration_id_not_contains?: string | null
  integration_id_starts_with?: string | null
  integration_id_not_starts_with?: string | null
  integration_id_ends_with?: string | null
  integration_id_not_ends_with?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  content?: string | null
  content_not?: string | null
  content_in?: string[]
  content_not_in?: string[]
  content_lt?: string | null
  content_lte?: string | null
  content_gt?: string | null
  content_gte?: string | null
  content_contains?: string | null
  content_not_contains?: string | null
  content_starts_with?: string | null
  content_not_starts_with?: string | null
  content_ends_with?: string | null
  content_not_ends_with?: string | null
  channel?: prisma.CHANNEL | null
  channel_not?: prisma.CHANNEL | null
  channel_in?: prisma.CHANNEL[]
  channel_not_in?: prisma.CHANNEL[]
  read?: boolean | null
  read_not?: boolean | null
  updated?: boolean | null
  updated_not?: boolean | null
  archived?: boolean | null
  archived_not?: boolean | null
  processed?: boolean | null
  processed_not?: boolean | null
  AND?: MessageScalarWhereInput[]
  OR?: MessageScalarWhereInput[]
  NOT?: MessageScalarWhereInput[]
}
export type MessageScalarWhereInputInputObject =
  | Extract<keyof MessageScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'clientId_not', alias?: string  } 
  | { name: 'clientId_in', alias?: string  } 
  | { name: 'clientId_not_in', alias?: string  } 
  | { name: 'clientId_lt', alias?: string  } 
  | { name: 'clientId_lte', alias?: string  } 
  | { name: 'clientId_gt', alias?: string  } 
  | { name: 'clientId_gte', alias?: string  } 
  | { name: 'clientId_contains', alias?: string  } 
  | { name: 'clientId_not_contains', alias?: string  } 
  | { name: 'clientId_starts_with', alias?: string  } 
  | { name: 'clientId_not_starts_with', alias?: string  } 
  | { name: 'clientId_ends_with', alias?: string  } 
  | { name: 'clientId_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: 'receivedAt_not', alias?: string  } 
  | { name: 'receivedAt_in', alias?: string  } 
  | { name: 'receivedAt_not_in', alias?: string  } 
  | { name: 'receivedAt_lt', alias?: string  } 
  | { name: 'receivedAt_lte', alias?: string  } 
  | { name: 'receivedAt_gt', alias?: string  } 
  | { name: 'receivedAt_gte', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: '_projectId_not', alias?: string  } 
  | { name: '_projectId_in', alias?: string  } 
  | { name: '_projectId_not_in', alias?: string  } 
  | { name: '_projectId_lt', alias?: string  } 
  | { name: '_projectId_lte', alias?: string  } 
  | { name: '_projectId_gt', alias?: string  } 
  | { name: '_projectId_gte', alias?: string  } 
  | { name: '_projectId_contains', alias?: string  } 
  | { name: '_projectId_not_contains', alias?: string  } 
  | { name: '_projectId_starts_with', alias?: string  } 
  | { name: '_projectId_not_starts_with', alias?: string  } 
  | { name: '_projectId_ends_with', alias?: string  } 
  | { name: '_projectId_not_ends_with', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_url_not', alias?: string  } 
  | { name: 'integration_url_in', alias?: string  } 
  | { name: 'integration_url_not_in', alias?: string  } 
  | { name: 'integration_url_lt', alias?: string  } 
  | { name: 'integration_url_lte', alias?: string  } 
  | { name: 'integration_url_gt', alias?: string  } 
  | { name: 'integration_url_gte', alias?: string  } 
  | { name: 'integration_url_contains', alias?: string  } 
  | { name: 'integration_url_not_contains', alias?: string  } 
  | { name: 'integration_url_starts_with', alias?: string  } 
  | { name: 'integration_url_not_starts_with', alias?: string  } 
  | { name: 'integration_url_ends_with', alias?: string  } 
  | { name: 'integration_url_not_ends_with', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'integration_id_not', alias?: string  } 
  | { name: 'integration_id_in', alias?: string  } 
  | { name: 'integration_id_not_in', alias?: string  } 
  | { name: 'integration_id_lt', alias?: string  } 
  | { name: 'integration_id_lte', alias?: string  } 
  | { name: 'integration_id_gt', alias?: string  } 
  | { name: 'integration_id_gte', alias?: string  } 
  | { name: 'integration_id_contains', alias?: string  } 
  | { name: 'integration_id_not_contains', alias?: string  } 
  | { name: 'integration_id_starts_with', alias?: string  } 
  | { name: 'integration_id_not_starts_with', alias?: string  } 
  | { name: 'integration_id_ends_with', alias?: string  } 
  | { name: 'integration_id_not_ends_with', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'content_not', alias?: string  } 
  | { name: 'content_in', alias?: string  } 
  | { name: 'content_not_in', alias?: string  } 
  | { name: 'content_lt', alias?: string  } 
  | { name: 'content_lte', alias?: string  } 
  | { name: 'content_gt', alias?: string  } 
  | { name: 'content_gte', alias?: string  } 
  | { name: 'content_contains', alias?: string  } 
  | { name: 'content_not_contains', alias?: string  } 
  | { name: 'content_starts_with', alias?: string  } 
  | { name: 'content_not_starts_with', alias?: string  } 
  | { name: 'content_ends_with', alias?: string  } 
  | { name: 'content_not_ends_with', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'channel_not', alias?: string  } 
  | { name: 'channel_in', alias?: string  } 
  | { name: 'channel_not_in', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'read_not', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'updated_not', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'archived_not', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  | { name: 'processed_not', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MessageUpdateManyWithWhereNestedInput {
  where?: MessageScalarWhereInput
  data?: MessageUpdateManyDataInput
}
export type MessageUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof MessageUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MessageUpdateManyDataInput {
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageUpdateManyDataInputInputObject =
  | Extract<keyof MessageUpdateManyDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface PersonUpsertWithoutSubmitted_messagesInput {
  update?: PersonUpdateWithoutSubmitted_messagesDataInput
  create?: PersonCreateWithoutSubmitted_messagesInput
}
export type PersonUpsertWithoutSubmitted_messagesInputInputObject =
  | Extract<keyof PersonUpsertWithoutSubmitted_messagesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MessageUpsertWithWhereUniqueWithoutCcsInput {
  where?: MessageWhereUniqueInput
  update?: MessageUpdateWithoutCcsDataInput
  create?: MessageCreateWithoutCcsInput
}
export type MessageUpsertWithWhereUniqueWithoutCcsInputInputObject =
  | Extract<keyof MessageUpsertWithWhereUniqueWithoutCcsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PersonUpsertWithoutRequested_messagesInput {
  update?: PersonUpdateWithoutRequested_messagesDataInput
  create?: PersonCreateWithoutRequested_messagesInput
}
export type PersonUpsertWithoutRequested_messagesInputInputObject =
  | Extract<keyof PersonUpsertWithoutRequested_messagesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MessageUpsertWithWhereUniqueWithoutSubmitterInput {
  where?: MessageWhereUniqueInput
  update?: MessageUpdateWithoutSubmitterDataInput
  create?: MessageCreateWithoutSubmitterInput
}
export type MessageUpsertWithWhereUniqueWithoutSubmitterInputInputObject =
  | Extract<keyof MessageUpsertWithWhereUniqueWithoutSubmitterInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PersonUpsertWithWhereUniqueWithoutProjectInput {
  where?: PersonWhereUniqueInput
  update?: PersonUpdateWithoutProjectDataInput
  create?: PersonCreateWithoutProjectInput
}
export type PersonUpsertWithWhereUniqueWithoutProjectInputInputObject =
  | Extract<keyof PersonUpsertWithWhereUniqueWithoutProjectInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProjectUpsertNestedInput {
  update?: ProjectUpdateDataInput
  create?: ProjectCreateInput
}
export type ProjectUpsertNestedInputInputObject =
  | Extract<keyof ProjectUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProjectRightUpsertWithoutPersonInput {
  update?: ProjectRightUpdateWithoutPersonDataInput
  create?: ProjectRightCreateWithoutPersonInput
}
export type ProjectRightUpsertWithoutPersonInputInputObject =
  | Extract<keyof ProjectRightUpsertWithoutPersonInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PersonUpsertNestedInput {
  update?: PersonUpdateDataInput
  create?: PersonCreateInput
}
export type PersonUpsertNestedInputInputObject =
  | Extract<keyof PersonUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface SubmessageUpsertWithWhereUniqueWithoutMessageInput {
  where?: SubmessageWhereUniqueInput
  update?: SubmessageUpdateWithoutMessageDataInput
  create?: SubmessageCreateWithoutMessageInput
}
export type SubmessageUpsertWithWhereUniqueWithoutMessageInputInputObject =
  | Extract<keyof SubmessageUpsertWithWhereUniqueWithoutMessageInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface SubmessageScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  clientId?: string | null
  clientId_not?: string | null
  clientId_in?: string[]
  clientId_not_in?: string[]
  clientId_lt?: string | null
  clientId_lte?: string | null
  clientId_gt?: string | null
  clientId_gte?: string | null
  clientId_contains?: string | null
  clientId_not_contains?: string | null
  clientId_starts_with?: string | null
  clientId_not_starts_with?: string | null
  clientId_ends_with?: string | null
  clientId_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  receivedAt?: string | null
  receivedAt_not?: string | null
  receivedAt_in?: string[]
  receivedAt_not_in?: string[]
  receivedAt_lt?: string | null
  receivedAt_lte?: string | null
  receivedAt_gt?: string | null
  receivedAt_gte?: string | null
  integration_id?: string | null
  integration_id_not?: string | null
  integration_id_in?: string[]
  integration_id_not_in?: string[]
  integration_id_lt?: string | null
  integration_id_lte?: string | null
  integration_id_gt?: string | null
  integration_id_gte?: string | null
  integration_id_contains?: string | null
  integration_id_not_contains?: string | null
  integration_id_starts_with?: string | null
  integration_id_not_starts_with?: string | null
  integration_id_ends_with?: string | null
  integration_id_not_ends_with?: string | null
  type?: prisma.MESSAGE_TYPE | null
  type_not?: prisma.MESSAGE_TYPE | null
  type_in?: prisma.MESSAGE_TYPE[]
  type_not_in?: prisma.MESSAGE_TYPE[]
  content?: string | null
  content_not?: string | null
  content_in?: string[]
  content_not_in?: string[]
  content_lt?: string | null
  content_lte?: string | null
  content_gt?: string | null
  content_gte?: string | null
  content_contains?: string | null
  content_not_contains?: string | null
  content_starts_with?: string | null
  content_not_starts_with?: string | null
  content_ends_with?: string | null
  content_not_ends_with?: string | null
  AND?: SubmessageScalarWhereInput[]
  OR?: SubmessageScalarWhereInput[]
  NOT?: SubmessageScalarWhereInput[]
}
export type SubmessageScalarWhereInputInputObject =
  | Extract<keyof SubmessageScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'clientId_not', alias?: string  } 
  | { name: 'clientId_in', alias?: string  } 
  | { name: 'clientId_not_in', alias?: string  } 
  | { name: 'clientId_lt', alias?: string  } 
  | { name: 'clientId_lte', alias?: string  } 
  | { name: 'clientId_gt', alias?: string  } 
  | { name: 'clientId_gte', alias?: string  } 
  | { name: 'clientId_contains', alias?: string  } 
  | { name: 'clientId_not_contains', alias?: string  } 
  | { name: 'clientId_starts_with', alias?: string  } 
  | { name: 'clientId_not_starts_with', alias?: string  } 
  | { name: 'clientId_ends_with', alias?: string  } 
  | { name: 'clientId_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: 'receivedAt_not', alias?: string  } 
  | { name: 'receivedAt_in', alias?: string  } 
  | { name: 'receivedAt_not_in', alias?: string  } 
  | { name: 'receivedAt_lt', alias?: string  } 
  | { name: 'receivedAt_lte', alias?: string  } 
  | { name: 'receivedAt_gt', alias?: string  } 
  | { name: 'receivedAt_gte', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'integration_id_not', alias?: string  } 
  | { name: 'integration_id_in', alias?: string  } 
  | { name: 'integration_id_not_in', alias?: string  } 
  | { name: 'integration_id_lt', alias?: string  } 
  | { name: 'integration_id_lte', alias?: string  } 
  | { name: 'integration_id_gt', alias?: string  } 
  | { name: 'integration_id_gte', alias?: string  } 
  | { name: 'integration_id_contains', alias?: string  } 
  | { name: 'integration_id_not_contains', alias?: string  } 
  | { name: 'integration_id_starts_with', alias?: string  } 
  | { name: 'integration_id_not_starts_with', alias?: string  } 
  | { name: 'integration_id_ends_with', alias?: string  } 
  | { name: 'integration_id_not_ends_with', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'content_not', alias?: string  } 
  | { name: 'content_in', alias?: string  } 
  | { name: 'content_not_in', alias?: string  } 
  | { name: 'content_lt', alias?: string  } 
  | { name: 'content_lte', alias?: string  } 
  | { name: 'content_gt', alias?: string  } 
  | { name: 'content_gte', alias?: string  } 
  | { name: 'content_contains', alias?: string  } 
  | { name: 'content_not_contains', alias?: string  } 
  | { name: 'content_starts_with', alias?: string  } 
  | { name: 'content_not_starts_with', alias?: string  } 
  | { name: 'content_ends_with', alias?: string  } 
  | { name: 'content_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SubmessageUpdateManyWithWhereNestedInput {
  where?: SubmessageScalarWhereInput
  data?: SubmessageUpdateManyDataInput
}
export type SubmessageUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof SubmessageUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface SubmessageUpdateManyDataInput {
  clientId?: string | null
  receivedAt?: string | null
  integration_id?: string | null
  type?: prisma.MESSAGE_TYPE | null
  content?: string | null
}
export type SubmessageUpdateManyDataInputInputObject =
  | Extract<keyof SubmessageUpdateManyDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'content', alias?: string  } 
  
export interface MessageUpsertWithWhereUniqueWithoutProjectInput {
  where?: MessageWhereUniqueInput
  update?: MessageUpdateWithoutProjectDataInput
  create?: MessageCreateWithoutProjectInput
}
export type MessageUpsertWithWhereUniqueWithoutProjectInputInputObject =
  | Extract<keyof MessageUpsertWithWhereUniqueWithoutProjectInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProjectUpsertWithoutPersonsInput {
  update?: ProjectUpdateWithoutPersonsDataInput
  create?: ProjectCreateWithoutPersonsInput
}
export type ProjectUpsertWithoutPersonsInputInputObject =
  | Extract<keyof ProjectUpsertWithoutPersonsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PersonUpsertWithoutAccountInput {
  update?: PersonUpdateWithoutAccountDataInput
  create?: PersonCreateWithoutAccountInput
}
export type PersonUpsertWithoutAccountInputInputObject =
  | Extract<keyof PersonUpsertWithoutAccountInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface AccountUpsertWithWhereUniqueWithoutProjectInput {
  where?: AccountWhereUniqueInput
  update?: AccountUpdateWithoutProjectDataInput
  create?: AccountCreateWithoutProjectInput
}
export type AccountUpsertWithWhereUniqueWithoutProjectInputInputObject =
  | Extract<keyof AccountUpsertWithWhereUniqueWithoutProjectInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface AccountScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  clientId?: string | null
  clientId_not?: string | null
  clientId_in?: string[]
  clientId_not_in?: string[]
  clientId_lt?: string | null
  clientId_lte?: string | null
  clientId_gt?: string | null
  clientId_gte?: string | null
  clientId_contains?: string | null
  clientId_not_contains?: string | null
  clientId_starts_with?: string | null
  clientId_not_starts_with?: string | null
  clientId_ends_with?: string | null
  clientId_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  lastSeenAt?: string | null
  lastSeenAt_not?: string | null
  lastSeenAt_in?: string[]
  lastSeenAt_not_in?: string[]
  lastSeenAt_lt?: string | null
  lastSeenAt_lte?: string | null
  lastSeenAt_gt?: string | null
  lastSeenAt_gte?: string | null
  deletedAt?: string | null
  deletedAt_not?: string | null
  deletedAt_in?: string[]
  deletedAt_not_in?: string[]
  deletedAt_lt?: string | null
  deletedAt_lte?: string | null
  deletedAt_gt?: string | null
  deletedAt_gte?: string | null
  reset_password_token?: string | null
  reset_password_token_not?: string | null
  reset_password_token_in?: string[]
  reset_password_token_not_in?: string[]
  reset_password_token_lt?: string | null
  reset_password_token_lte?: string | null
  reset_password_token_gt?: string | null
  reset_password_token_gte?: string | null
  reset_password_token_contains?: string | null
  reset_password_token_not_contains?: string | null
  reset_password_token_starts_with?: string | null
  reset_password_token_not_starts_with?: string | null
  reset_password_token_ends_with?: string | null
  reset_password_token_not_ends_with?: string | null
  reset_password_exp_date?: string | null
  reset_password_exp_date_not?: string | null
  reset_password_exp_date_in?: string[]
  reset_password_exp_date_not_in?: string[]
  reset_password_exp_date_lt?: string | null
  reset_password_exp_date_lte?: string | null
  reset_password_exp_date_gt?: string | null
  reset_password_exp_date_gte?: string | null
  username?: string | null
  username_not?: string | null
  username_in?: string[]
  username_not_in?: string[]
  username_lt?: string | null
  username_lte?: string | null
  username_gt?: string | null
  username_gte?: string | null
  username_contains?: string | null
  username_not_contains?: string | null
  username_starts_with?: string | null
  username_not_starts_with?: string | null
  username_ends_with?: string | null
  username_not_ends_with?: string | null
  hash?: string | null
  hash_not?: string | null
  hash_in?: string[]
  hash_not_in?: string[]
  hash_lt?: string | null
  hash_lte?: string | null
  hash_gt?: string | null
  hash_gte?: string | null
  hash_contains?: string | null
  hash_not_contains?: string | null
  hash_starts_with?: string | null
  hash_not_starts_with?: string | null
  hash_ends_with?: string | null
  hash_not_ends_with?: string | null
  need_onboarding?: boolean | null
  need_onboarding_not?: boolean | null
  email_validated?: boolean | null
  email_validated_not?: boolean | null
  emailConfirmToken?: string | null
  emailConfirmToken_not?: string | null
  emailConfirmToken_in?: string[]
  emailConfirmToken_not_in?: string[]
  emailConfirmToken_lt?: string | null
  emailConfirmToken_lte?: string | null
  emailConfirmToken_gt?: string | null
  emailConfirmToken_gte?: string | null
  emailConfirmToken_contains?: string | null
  emailConfirmToken_not_contains?: string | null
  emailConfirmToken_starts_with?: string | null
  emailConfirmToken_not_starts_with?: string | null
  emailConfirmToken_ends_with?: string | null
  emailConfirmToken_not_ends_with?: string | null
  AND?: AccountScalarWhereInput[]
  OR?: AccountScalarWhereInput[]
  NOT?: AccountScalarWhereInput[]
}
export type AccountScalarWhereInputInputObject =
  | Extract<keyof AccountScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'clientId_not', alias?: string  } 
  | { name: 'clientId_in', alias?: string  } 
  | { name: 'clientId_not_in', alias?: string  } 
  | { name: 'clientId_lt', alias?: string  } 
  | { name: 'clientId_lte', alias?: string  } 
  | { name: 'clientId_gt', alias?: string  } 
  | { name: 'clientId_gte', alias?: string  } 
  | { name: 'clientId_contains', alias?: string  } 
  | { name: 'clientId_not_contains', alias?: string  } 
  | { name: 'clientId_starts_with', alias?: string  } 
  | { name: 'clientId_not_starts_with', alias?: string  } 
  | { name: 'clientId_ends_with', alias?: string  } 
  | { name: 'clientId_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'lastSeenAt', alias?: string  } 
  | { name: 'lastSeenAt_not', alias?: string  } 
  | { name: 'lastSeenAt_in', alias?: string  } 
  | { name: 'lastSeenAt_not_in', alias?: string  } 
  | { name: 'lastSeenAt_lt', alias?: string  } 
  | { name: 'lastSeenAt_lte', alias?: string  } 
  | { name: 'lastSeenAt_gt', alias?: string  } 
  | { name: 'lastSeenAt_gte', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'deletedAt_not', alias?: string  } 
  | { name: 'deletedAt_in', alias?: string  } 
  | { name: 'deletedAt_not_in', alias?: string  } 
  | { name: 'deletedAt_lt', alias?: string  } 
  | { name: 'deletedAt_lte', alias?: string  } 
  | { name: 'deletedAt_gt', alias?: string  } 
  | { name: 'deletedAt_gte', alias?: string  } 
  | { name: 'reset_password_token', alias?: string  } 
  | { name: 'reset_password_token_not', alias?: string  } 
  | { name: 'reset_password_token_in', alias?: string  } 
  | { name: 'reset_password_token_not_in', alias?: string  } 
  | { name: 'reset_password_token_lt', alias?: string  } 
  | { name: 'reset_password_token_lte', alias?: string  } 
  | { name: 'reset_password_token_gt', alias?: string  } 
  | { name: 'reset_password_token_gte', alias?: string  } 
  | { name: 'reset_password_token_contains', alias?: string  } 
  | { name: 'reset_password_token_not_contains', alias?: string  } 
  | { name: 'reset_password_token_starts_with', alias?: string  } 
  | { name: 'reset_password_token_not_starts_with', alias?: string  } 
  | { name: 'reset_password_token_ends_with', alias?: string  } 
  | { name: 'reset_password_token_not_ends_with', alias?: string  } 
  | { name: 'reset_password_exp_date', alias?: string  } 
  | { name: 'reset_password_exp_date_not', alias?: string  } 
  | { name: 'reset_password_exp_date_in', alias?: string  } 
  | { name: 'reset_password_exp_date_not_in', alias?: string  } 
  | { name: 'reset_password_exp_date_lt', alias?: string  } 
  | { name: 'reset_password_exp_date_lte', alias?: string  } 
  | { name: 'reset_password_exp_date_gt', alias?: string  } 
  | { name: 'reset_password_exp_date_gte', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'username_not', alias?: string  } 
  | { name: 'username_in', alias?: string  } 
  | { name: 'username_not_in', alias?: string  } 
  | { name: 'username_lt', alias?: string  } 
  | { name: 'username_lte', alias?: string  } 
  | { name: 'username_gt', alias?: string  } 
  | { name: 'username_gte', alias?: string  } 
  | { name: 'username_contains', alias?: string  } 
  | { name: 'username_not_contains', alias?: string  } 
  | { name: 'username_starts_with', alias?: string  } 
  | { name: 'username_not_starts_with', alias?: string  } 
  | { name: 'username_ends_with', alias?: string  } 
  | { name: 'username_not_ends_with', alias?: string  } 
  | { name: 'hash', alias?: string  } 
  | { name: 'hash_not', alias?: string  } 
  | { name: 'hash_in', alias?: string  } 
  | { name: 'hash_not_in', alias?: string  } 
  | { name: 'hash_lt', alias?: string  } 
  | { name: 'hash_lte', alias?: string  } 
  | { name: 'hash_gt', alias?: string  } 
  | { name: 'hash_gte', alias?: string  } 
  | { name: 'hash_contains', alias?: string  } 
  | { name: 'hash_not_contains', alias?: string  } 
  | { name: 'hash_starts_with', alias?: string  } 
  | { name: 'hash_not_starts_with', alias?: string  } 
  | { name: 'hash_ends_with', alias?: string  } 
  | { name: 'hash_not_ends_with', alias?: string  } 
  | { name: 'need_onboarding', alias?: string  } 
  | { name: 'need_onboarding_not', alias?: string  } 
  | { name: 'email_validated', alias?: string  } 
  | { name: 'email_validated_not', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'emailConfirmToken_not', alias?: string  } 
  | { name: 'emailConfirmToken_in', alias?: string  } 
  | { name: 'emailConfirmToken_not_in', alias?: string  } 
  | { name: 'emailConfirmToken_lt', alias?: string  } 
  | { name: 'emailConfirmToken_lte', alias?: string  } 
  | { name: 'emailConfirmToken_gt', alias?: string  } 
  | { name: 'emailConfirmToken_gte', alias?: string  } 
  | { name: 'emailConfirmToken_contains', alias?: string  } 
  | { name: 'emailConfirmToken_not_contains', alias?: string  } 
  | { name: 'emailConfirmToken_starts_with', alias?: string  } 
  | { name: 'emailConfirmToken_not_starts_with', alias?: string  } 
  | { name: 'emailConfirmToken_ends_with', alias?: string  } 
  | { name: 'emailConfirmToken_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AccountUpdateManyWithWhereNestedInput {
  where?: AccountScalarWhereInput
  data?: AccountUpdateManyDataInput
}
export type AccountUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof AccountUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface AccountUpdateManyDataInput {
  clientId?: string | null
  lastSeenAt?: string | null
  deletedAt?: string | null
  reset_password_token?: string | null
  reset_password_exp_date?: string | null
  username?: string | null
  hash?: string | null
  need_onboarding?: boolean | null
  email_validated?: boolean | null
  emailConfirmToken?: string | null
}
export type AccountUpdateManyDataInputInputObject =
  | Extract<keyof AccountUpdateManyDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'lastSeenAt', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'reset_password_token', alias?: string  } 
  | { name: 'reset_password_exp_date', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'hash', alias?: string  } 
  | { name: 'need_onboarding', alias?: string  } 
  | { name: 'email_validated', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  
export interface ProjectUpdateManyMutationInput {
  clientId?: string | null
  name?: string | null
}
export type ProjectUpdateManyMutationInputInputObject =
  | Extract<keyof ProjectUpdateManyMutationInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface AccountCreateInput {
  id?: string | null
  clientId?: string | null
  lastSeenAt?: string
  deletedAt?: string | null
  project?: ProjectCreateOneWithoutAccountsInput
  person?: PersonCreateOneWithoutAccountInput
  reset_password_token?: string | null
  reset_password_exp_date?: string | null
  username?: string
  hash?: string
  need_onboarding?: boolean | null
  email_validated?: boolean | null
  emailConfirmToken?: string | null
}
export type AccountCreateInputInputObject =
  | Extract<keyof AccountCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'lastSeenAt', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'reset_password_token', alias?: string  } 
  | { name: 'reset_password_exp_date', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'hash', alias?: string  } 
  | { name: 'need_onboarding', alias?: string  } 
  | { name: 'email_validated', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  
export interface AccountUpdateInput {
  clientId?: string | null
  lastSeenAt?: string | null
  deletedAt?: string | null
  project?: ProjectUpdateOneRequiredWithoutAccountsInput | null
  person?: PersonUpdateOneRequiredWithoutAccountInput | null
  reset_password_token?: string | null
  reset_password_exp_date?: string | null
  username?: string | null
  hash?: string | null
  need_onboarding?: boolean | null
  email_validated?: boolean | null
  emailConfirmToken?: string | null
}
export type AccountUpdateInputInputObject =
  | Extract<keyof AccountUpdateInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'lastSeenAt', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'person', alias?: string  } 
  | { name: 'reset_password_token', alias?: string  } 
  | { name: 'reset_password_exp_date', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'hash', alias?: string  } 
  | { name: 'need_onboarding', alias?: string  } 
  | { name: 'email_validated', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  
export interface AccountUpdateManyMutationInput {
  clientId?: string | null
  lastSeenAt?: string | null
  deletedAt?: string | null
  reset_password_token?: string | null
  reset_password_exp_date?: string | null
  username?: string | null
  hash?: string | null
  need_onboarding?: boolean | null
  email_validated?: boolean | null
  emailConfirmToken?: string | null
}
export type AccountUpdateManyMutationInputInputObject =
  | Extract<keyof AccountUpdateManyMutationInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'lastSeenAt', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'reset_password_token', alias?: string  } 
  | { name: 'reset_password_exp_date', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'hash', alias?: string  } 
  | { name: 'need_onboarding', alias?: string  } 
  | { name: 'email_validated', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  
export interface SubmessageCreateInput {
  id?: string | null
  clientId?: string | null
  receivedAt?: string | null
  message?: MessageCreateOneWithoutSub_messagesInput
  submitter?: PersonCreateOneInput
  integration_id?: string | null
  type?: prisma.MESSAGE_TYPE | null
  content?: string | null
}
export type SubmessageCreateInputInputObject =
  | Extract<keyof SubmessageCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: 'message', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'content', alias?: string  } 
  
export interface MessageCreateOneWithoutSub_messagesInput {
  create?: MessageCreateWithoutSub_messagesInput | null
  connect?: MessageWhereUniqueInput | null
}
export type MessageCreateOneWithoutSub_messagesInputInputObject =
  | Extract<keyof MessageCreateOneWithoutSub_messagesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MessageCreateWithoutSub_messagesInput {
  id?: string | null
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  project?: ProjectCreateOneWithoutMessagesInput
  submitter?: PersonCreateOneWithoutSubmitted_messagesInput
  requester?: PersonCreateOneWithoutRequested_messagesInput | null
  ccs?: PersonCreateManyWithoutCc_messagesInput | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageCreateWithoutSub_messagesInputInputObject =
  | Extract<keyof MessageCreateWithoutSub_messagesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'requester', alias?: string  } 
  | { name: 'ccs', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface SubmessageUpdateInput {
  clientId?: string | null
  receivedAt?: string | null
  message?: MessageUpdateOneRequiredWithoutSub_messagesInput | null
  submitter?: PersonUpdateOneRequiredInput | null
  integration_id?: string | null
  type?: prisma.MESSAGE_TYPE | null
  content?: string | null
}
export type SubmessageUpdateInputInputObject =
  | Extract<keyof SubmessageUpdateInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: 'message', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'content', alias?: string  } 
  
export interface MessageUpdateOneRequiredWithoutSub_messagesInput {
  create?: MessageCreateWithoutSub_messagesInput | null
  update?: MessageUpdateWithoutSub_messagesDataInput | null
  upsert?: MessageUpsertWithoutSub_messagesInput | null
  connect?: MessageWhereUniqueInput | null
}
export type MessageUpdateOneRequiredWithoutSub_messagesInputInputObject =
  | Extract<keyof MessageUpdateOneRequiredWithoutSub_messagesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MessageUpdateWithoutSub_messagesDataInput {
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  project?: ProjectUpdateOneRequiredWithoutMessagesInput | null
  submitter?: PersonUpdateOneRequiredWithoutSubmitted_messagesInput | null
  requester?: PersonUpdateOneWithoutRequested_messagesInput | null
  ccs?: PersonUpdateManyWithoutCc_messagesInput | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageUpdateWithoutSub_messagesDataInputInputObject =
  | Extract<keyof MessageUpdateWithoutSub_messagesDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'requester', alias?: string  } 
  | { name: 'ccs', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface MessageUpsertWithoutSub_messagesInput {
  update?: MessageUpdateWithoutSub_messagesDataInput
  create?: MessageCreateWithoutSub_messagesInput
}
export type MessageUpsertWithoutSub_messagesInputInputObject =
  | Extract<keyof MessageUpsertWithoutSub_messagesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface SubmessageUpdateManyMutationInput {
  clientId?: string | null
  receivedAt?: string | null
  integration_id?: string | null
  type?: prisma.MESSAGE_TYPE | null
  content?: string | null
}
export type SubmessageUpdateManyMutationInputInputObject =
  | Extract<keyof SubmessageUpdateManyMutationInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'content', alias?: string  } 
  
export interface MessageCreateInput {
  id?: string | null
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  project?: ProjectCreateOneWithoutMessagesInput
  sub_messages?: SubmessageCreateManyWithoutMessageInput | null
  submitter?: PersonCreateOneWithoutSubmitted_messagesInput
  requester?: PersonCreateOneWithoutRequested_messagesInput | null
  ccs?: PersonCreateManyWithoutCc_messagesInput | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageCreateInputInputObject =
  | Extract<keyof MessageCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'sub_messages', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'requester', alias?: string  } 
  | { name: 'ccs', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface MessageUpdateInput {
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  project?: ProjectUpdateOneRequiredWithoutMessagesInput | null
  sub_messages?: SubmessageUpdateManyWithoutMessageInput | null
  submitter?: PersonUpdateOneRequiredWithoutSubmitted_messagesInput | null
  requester?: PersonUpdateOneWithoutRequested_messagesInput | null
  ccs?: PersonUpdateManyWithoutCc_messagesInput | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageUpdateInputInputObject =
  | Extract<keyof MessageUpdateInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'sub_messages', alias?: string  } 
  | { name: 'submitter', alias?: string  } 
  | { name: 'requester', alias?: string  } 
  | { name: 'ccs', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface MessageUpdateManyMutationInput {
  clientId?: string | null
  receivedAt?: string | null
  _projectId?: string | null
  integration_url?: string | null
  integration_id?: string | null
  title?: string | null
  content?: string | null
  channel?: prisma.CHANNEL | null
  read?: boolean | null
  updated?: boolean | null
  archived?: boolean | null
  processed?: boolean | null
}
export type MessageUpdateManyMutationInputInputObject =
  | Extract<keyof MessageUpdateManyMutationInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: 'receivedAt', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'integration_url', alias?: string  } 
  | { name: 'integration_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'channel', alias?: string  } 
  | { name: 'read', alias?: string  } 
  | { name: 'updated', alias?: string  } 
  | { name: 'archived', alias?: string  } 
  | { name: 'processed', alias?: string  } 
  
export interface ProjectRightCreateInput {
  id?: string | null
  project?: ProjectCreateOneInput
  right?: prisma.RIGHT
  person?: PersonCreateOneWithoutRightInput | null
}
export type ProjectRightCreateInputInputObject =
  | Extract<keyof ProjectRightCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'person', alias?: string  } 
  
export interface PersonCreateOneWithoutRightInput {
  create?: PersonCreateWithoutRightInput | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonCreateOneWithoutRightInputInputObject =
  | Extract<keyof PersonCreateOneWithoutRightInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonCreateWithoutRightInput {
  id?: string | null
  clientId?: string | null
  _projectId?: string | null
  project?: ProjectCreateOneWithoutPersonsInput
  submitted_messages?: MessageCreateManyWithoutSubmitterInput | null
  requested_messages?: MessageCreateManyWithoutRequesterInput | null
  cc_messages?: MessageCreateManyWithoutCcsInput | null
  account?: AccountCreateOneWithoutPersonInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonCreateWithoutRightInputInputObject =
  | Extract<keyof PersonCreateWithoutRightInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'submitted_messages', alias?: string  } 
  | { name: 'requested_messages', alias?: string  } 
  | { name: 'cc_messages', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface ProjectRightUpdateInput {
  project?: ProjectUpdateOneRequiredInput | null
  right?: prisma.RIGHT | null
  person?: PersonUpdateOneWithoutRightInput | null
}
export type ProjectRightUpdateInputInputObject =
  | Extract<keyof ProjectRightUpdateInput, string>
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'person', alias?: string  } 
  
export interface PersonUpdateOneWithoutRightInput {
  create?: PersonCreateWithoutRightInput | null
  update?: PersonUpdateWithoutRightDataInput | null
  upsert?: PersonUpsertWithoutRightInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: PersonWhereUniqueInput | null
}
export type PersonUpdateOneWithoutRightInputInputObject =
  | Extract<keyof PersonUpdateOneWithoutRightInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PersonUpdateWithoutRightDataInput {
  clientId?: string | null
  _projectId?: string | null
  project?: ProjectUpdateOneRequiredWithoutPersonsInput | null
  submitted_messages?: MessageUpdateManyWithoutSubmitterInput | null
  requested_messages?: MessageUpdateManyWithoutRequesterInput | null
  cc_messages?: MessageUpdateManyWithoutCcsInput | null
  account?: AccountUpdateOneWithoutPersonInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string | null
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonUpdateWithoutRightDataInputInputObject =
  | Extract<keyof PersonUpdateWithoutRightDataInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'submitted_messages', alias?: string  } 
  | { name: 'requested_messages', alias?: string  } 
  | { name: 'cc_messages', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface PersonUpsertWithoutRightInput {
  update?: PersonUpdateWithoutRightDataInput
  create?: PersonCreateWithoutRightInput
}
export type PersonUpsertWithoutRightInputInputObject =
  | Extract<keyof PersonUpsertWithoutRightInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProjectRightUpdateManyMutationInput {
  right?: prisma.RIGHT | null
}
export type ProjectRightUpdateManyMutationInputInputObject =
  | Extract<keyof ProjectRightUpdateManyMutationInput, string>
  | { name: 'right', alias?: string  } 
  
export interface PersonUpdateInput {
  clientId?: string | null
  _projectId?: string | null
  project?: ProjectUpdateOneRequiredWithoutPersonsInput | null
  right?: ProjectRightUpdateOneWithoutPersonInput | null
  submitted_messages?: MessageUpdateManyWithoutSubmitterInput | null
  requested_messages?: MessageUpdateManyWithoutRequesterInput | null
  cc_messages?: MessageUpdateManyWithoutCcsInput | null
  account?: AccountUpdateOneWithoutPersonInput | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string | null
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonUpdateInputInputObject =
  | Extract<keyof PersonUpdateInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'project', alias?: string  } 
  | { name: 'right', alias?: string  } 
  | { name: 'submitted_messages', alias?: string  } 
  | { name: 'requested_messages', alias?: string  } 
  | { name: 'cc_messages', alias?: string  } 
  | { name: 'account', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface PersonUpdateManyMutationInput {
  clientId?: string | null
  _projectId?: string | null
  deleted?: boolean | null
  type?: prisma.PERSON_TYPE | null
  name?: string | null
  email?: string | null
  details?: string | null
  phone?: string | null
  zendesk_url?: string | null
}
export type PersonUpdateManyMutationInputInputObject =
  | Extract<keyof PersonUpdateManyMutationInput, string>
  | { name: 'clientId', alias?: string  } 
  | { name: '_projectId', alias?: string  } 
  | { name: 'deleted', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'details', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'zendesk_url', alias?: string  } 
  
export interface ProjectSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ProjectWhereInput | null
  AND?: ProjectSubscriptionWhereInput[]
  OR?: ProjectSubscriptionWhereInput[]
  NOT?: ProjectSubscriptionWhereInput[]
}
export type ProjectSubscriptionWhereInputInputObject =
  | Extract<keyof ProjectSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AccountSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: AccountWhereInput | null
  AND?: AccountSubscriptionWhereInput[]
  OR?: AccountSubscriptionWhereInput[]
  NOT?: AccountSubscriptionWhereInput[]
}
export type AccountSubscriptionWhereInputInputObject =
  | Extract<keyof AccountSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SubmessageSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SubmessageWhereInput | null
  AND?: SubmessageSubscriptionWhereInput[]
  OR?: SubmessageSubscriptionWhereInput[]
  NOT?: SubmessageSubscriptionWhereInput[]
}
export type SubmessageSubscriptionWhereInputInputObject =
  | Extract<keyof SubmessageSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MessageSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MessageWhereInput | null
  AND?: MessageSubscriptionWhereInput[]
  OR?: MessageSubscriptionWhereInput[]
  NOT?: MessageSubscriptionWhereInput[]
}
export type MessageSubscriptionWhereInputInputObject =
  | Extract<keyof MessageSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ProjectRightSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ProjectRightWhereInput | null
  AND?: ProjectRightSubscriptionWhereInput[]
  OR?: ProjectRightSubscriptionWhereInput[]
  NOT?: ProjectRightSubscriptionWhereInput[]
}
export type ProjectRightSubscriptionWhereInputInputObject =
  | Extract<keyof ProjectRightSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PersonSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PersonWhereInput | null
  AND?: PersonSubscriptionWhereInput[]
  OR?: PersonSubscriptionWhereInput[]
  NOT?: PersonSubscriptionWhereInput[]
}
export type PersonSubscriptionWhereInputInputObject =
  | Extract<keyof PersonSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type RIGHTValues =
  | 'ADMIN'
  | 'AGENT'
  | 'VIEWER'
  
export type PERSON_TYPEValues =
  | 'COLLABORATOR'
  | 'CUSTOMER'
  
export type MESSAGE_TYPEValues =
  | 'NOTE'
  | 'MESSAGE'
  
export type CHANNELValues =
  | 'NOTE'
  | 'INTERCOM'
  | 'MAIL'
  | 'SLACK'
  | 'ZENDESK'
  | 'SHEET'
  | 'FORM'
  
export type AccountOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'clientId_ASC'
  | 'clientId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'lastSeenAt_ASC'
  | 'lastSeenAt_DESC'
  | 'deletedAt_ASC'
  | 'deletedAt_DESC'
  | 'reset_password_token_ASC'
  | 'reset_password_token_DESC'
  | 'reset_password_exp_date_ASC'
  | 'reset_password_exp_date_DESC'
  | 'username_ASC'
  | 'username_DESC'
  | 'hash_ASC'
  | 'hash_DESC'
  | 'need_onboarding_ASC'
  | 'need_onboarding_DESC'
  | 'email_validated_ASC'
  | 'email_validated_DESC'
  | 'emailConfirmToken_ASC'
  | 'emailConfirmToken_DESC'
  
export type MessageOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'clientId_ASC'
  | 'clientId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'receivedAt_ASC'
  | 'receivedAt_DESC'
  | '_projectId_ASC'
  | '_projectId_DESC'
  | 'integration_url_ASC'
  | 'integration_url_DESC'
  | 'integration_id_ASC'
  | 'integration_id_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'content_ASC'
  | 'content_DESC'
  | 'channel_ASC'
  | 'channel_DESC'
  | 'read_ASC'
  | 'read_DESC'
  | 'updated_ASC'
  | 'updated_DESC'
  | 'archived_ASC'
  | 'archived_DESC'
  | 'processed_ASC'
  | 'processed_DESC'
  
export type SubmessageOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'clientId_ASC'
  | 'clientId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'receivedAt_ASC'
  | 'receivedAt_DESC'
  | 'integration_id_ASC'
  | 'integration_id_DESC'
  | 'type_ASC'
  | 'type_DESC'
  | 'content_ASC'
  | 'content_DESC'
  
export type PersonOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'clientId_ASC'
  | 'clientId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | '_projectId_ASC'
  | '_projectId_DESC'
  | 'deleted_ASC'
  | 'deleted_DESC'
  | 'type_ASC'
  | 'type_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'details_ASC'
  | 'details_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'zendesk_url_ASC'
  | 'zendesk_url_DESC'
  
export type ProjectOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'clientId_ASC'
  | 'clientId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'name_ASC'
  | 'name_DESC'
  
export type ProjectRightOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'right_ASC'
  | 'right_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  